<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='preprocess_data' inline='true' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='preprocess_data' name='textscan.1x8ygn20wdapk61fioblx0sf1w6v'>
            <connection class='textscan' directory='C:/Users/Nam Mai/Work/dv/lab02/data' filename='preprocess_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious, Critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Serious, Critical]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Serious, Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Case every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Case every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Case every X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Death every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Death every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Death every X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Test every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Test every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Test every X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[1 Case every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[1 Case every X ppl]' peg='0' size='3011' />
      </column>
      <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[1 Death every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[1 Death every X ppl]' peg='0' size='17865' />
      </column>
      <column datatype='real' name='[1 Death every X ppl]' role='measure' type='quantitative' />
      <column caption='World Average New Cases' datatype='real' name='[Calculation_445293450974248962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(AVG([New Cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Population]' peg='0' size='3.22324e+07' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='2.17506e+06' />
      </column>
      <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Total Tests (bin)' datatype='integer' name='[Total Tests (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Total Tests]' peg='0' size='2.89088e+07' />
      </column>
      <column datatype='real' name='[Total Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='preprocess_data.csv' datatype='table' name='[__tableau_internal_object_id__].[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]' role='measure' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (WEEK(Date),WEEKDAY(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[wd:Date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>19</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>21</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='preprocess_data.csv' id='preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D'>
            <properties context=''>
              <relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Total Cases' ordinal='2' />
                  <column datatype='real' name='New Cases' ordinal='3' />
                  <column datatype='real' name='Total Deaths' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                  <column datatype='real' name='Total Recovered' ordinal='6' />
                  <column datatype='real' name='New Recovered' ordinal='7' />
                  <column datatype='real' name='Active Cases' ordinal='8' />
                  <column datatype='real' name='Serious, Critical' ordinal='9' />
                  <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='real' name='Total Tests' ordinal='12' />
                  <column datatype='real' name='Tests/1M pop' ordinal='13' />
                  <column datatype='real' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                  <column datatype='real' name='1 Case every X ppl' ordinal='16' />
                  <column datatype='real' name='1 Death every X ppl' ordinal='17' />
                  <column datatype='real' name='1 Test every X ppl' ordinal='18' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
                  <column datatype='date' name='Date' ordinal='20' />
                  <column datatype='string' name='Country Code' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Box Plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Box plots of various measures per 1M population by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[1 Case every X ppl]' derivation='None' name='[none:1 Case every X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='None' name='[none:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='None' name='[none:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='None' name='[none:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' z-order='3' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk])))</cols>
      </table>
      <simple-id uuid='{A947E7B7-82AA-424D-B3AF-61F2893EC5D0}' />
    </worksheet>
    <worksheet name='Europe Sum New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]' field-type='quantitative' max='6038045.2781360168' min='-4853245.7135656103' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]' field-type='quantitative' max='10804587.274333045' min='4026496.4382196194' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' />
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <geometry column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1ACF68E1-6025-4681-8F5E-F1A51CFD480D}' />
    </worksheet>
    <worksheet name='Histograms of Total Cases by Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Histogram of total cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='2.17506e+06' />
            </column>
            <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Count' name='[cnt:Total Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases (bin)]' derivation='None' name='[none:Total Cases (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[cnt:Total Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[cnt:Total Cases:qk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[wk:Date:ok] * [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Total Cases (bin):qk])</cols>
      </table>
      <simple-id uuid='{676F3401-D84D-4CD9-967B-4E16504828BD}' />
    </worksheet>
    <worksheet name='New Cases of Germany, France, Italy vs the world'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column caption='World Average New Cases' datatype='real' name='[Calculation_445293450974248962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(AVG([New Cases]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2])</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{A3B19176-B374-4A43-A969-82EBF273D470}' />
    </worksheet>
    <worksheet name='New Recovered of Vietnam vs Thailand'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{8D7600CA-F120-4E20-AC68-E6BC41AF30B6}' />
    </worksheet>
    <worksheet name='SEA New Case Percentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which contries in SEA have most new cases in May</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[pcto:sum:New Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' direction='DESC' using='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='752' />
            <format attr='cell-h' value='752' />
            <format attr='cell' value='94' />
            <format attr='cell-q' value='470' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <wedge-size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Thailand&quot;</value>
                <value>938.0</value>
                <value>0.69636228656273202</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{0CCD928E-0C97-4BCA-B8BC-03A1F029D0FD}' />
    </worksheet>
    <worksheet name='Stacked Area Chart by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Proportion of new cases trend by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AB5C98FA-619E-4968-BEE9-A1E260ADC429}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39EB2E22-44B1-4617-BC64-B308AAE1751E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Box Plots'>
      <cards>
        <edge name='left'>
          <strip size='209'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[twk:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD6B778E-FAF0-4BD3-BA1A-29ABE6370378}' />
    </window>
    <window class='worksheet' name='Histograms of Total Cases by Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Deaths:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Population:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Total Cases (bin):qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Total Cases:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Total Deaths:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Total Tests (bin):ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{29759BCB-2C42-490F-9D19-4748847B6889}' />
    </window>
    <window class='worksheet' name='Stacked Area Chart by Continents'>
      <cards>
        <edge name='left'>
          <strip size='211'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB59B81-CDF4-4470-B19F-75D3926E2905}' />
    </window>
    <window class='worksheet' name='SEA New Case Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{770F747D-13DC-48A5-AAFD-4BA80EAC59E0}' />
    </window>
    <window class='worksheet' name='New Recovered of Vietnam vs Thailand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='12' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D39607E-D82A-4BE2-B66E-3CC02C6147C5}' />
    </window>
    <window class='worksheet' maximized='true' name='Europe Sum New Cases'>
      <cards>
        <edge name='left'>
          <strip size='169'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450972991489:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{08DC8508-DE9F-4F6D-A956-84CA7407F8C1}' />
    </window>
    <window class='worksheet' name='New Cases of Germany, France, Italy vs the world'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='6' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' type='color' />
            <card pane-specification-id='7' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37F65853-E017-443E-8AE8-55CD8D4FAAF7}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1836BD02-5D50-4D67-8F88-499912035004}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Europe Sum New Cases' width='192'>
      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
      VdfYCv4P6JUXK+f5QCkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Histograms of Total Cases by Week' width='192'>
      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
      1U/+o1ay7f8DyphJ8IC+3mwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Cases of Germany, France, Italy vs the world' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Recovered of Vietnam vs Thailand' width='192'>
      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
      TAGYNDT/H4+KJyA2zV1vAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SEA New Case Percentage' width='192'>
      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
      AIjUKABEav8Pfi8/sx48iokAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stacked Area Chart by Continents' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
