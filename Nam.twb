<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='preprocess_data' inline='true' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='preprocess_data' name='textscan.1x8ygn20wdapk61fioblx0sf1w6v'>
            <connection class='textscan' directory='C:/Users/Nam Mai/Work/dv/lab02/data' filename='preprocess_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious, Critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Serious, Critical]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Serious, Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Case every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Case every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Case every X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Death every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Death every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Death every X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Test every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Test every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Test every X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[1 Case every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[1 Case every X ppl]' peg='0' size='3011' />
      </column>
      <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[1 Death every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[1 Death every X ppl]' peg='0' size='17865' />
      </column>
      <column datatype='real' name='[1 Death every X ppl]' role='measure' type='quantitative' />
      <column caption='World Average New Cases' datatype='real' name='[Calculation_445293450974248962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(AVG([New Cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Population]' peg='0' size='3.22324e+07' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='2.17506e+06' />
      </column>
      <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Total Tests (bin)' datatype='integer' name='[Total Tests (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Total Tests]' peg='0' size='2.89088e+07' />
      </column>
      <column datatype='real' name='[Total Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='preprocess_data.csv' datatype='table' name='[__tableau_internal_object_id__].[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]' role='measure' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (WEEK(Date),WEEKDAY(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[wd:Date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>19</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>21</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]&#10;[none:Forecast Indicator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='preprocess_data.csv' id='preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D'>
            <properties context=''>
              <relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Total Cases' ordinal='2' />
                  <column datatype='real' name='New Cases' ordinal='3' />
                  <column datatype='real' name='Total Deaths' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                  <column datatype='real' name='Total Recovered' ordinal='6' />
                  <column datatype='real' name='New Recovered' ordinal='7' />
                  <column datatype='real' name='Active Cases' ordinal='8' />
                  <column datatype='real' name='Serious, Critical' ordinal='9' />
                  <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='real' name='Total Tests' ordinal='12' />
                  <column datatype='real' name='Tests/1M pop' ordinal='13' />
                  <column datatype='real' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                  <column datatype='real' name='1 Case every X ppl' ordinal='16' />
                  <column datatype='real' name='1 Death every X ppl' ordinal='17' />
                  <column datatype='real' name='1 Test every X ppl' ordinal='18' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
                  <column datatype='date' name='Date' ordinal='20' />
                  <column datatype='string' name='Country Code' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Box Plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Box plots of various measures per 1M population by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[1 Case every X ppl]' derivation='None' name='[none:1 Case every X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='None' name='[none:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='None' name='[none:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='None' name='[none:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' z-order='3' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk])))</cols>
      </table>
      <simple-id uuid='{A947E7B7-82AA-424D-B3AF-61F2893EC5D0}' />
    </worksheet>
    <worksheet name='COVID Cases Across Continents'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' z-order='3' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]))</cols>
      </table>
      <simple-id uuid='{EE58B12E-26B6-45BE-A23A-D600F9CDD88C}' />
    </worksheet>
    <worksheet name='Europe Sum New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]' field-type='quantitative' max='6038045.2781360168' min='-4853245.7135656103' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]' field-type='quantitative' max='10804587.274333045' min='4026496.4382196194' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' />
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <geometry column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1ACF68E1-6025-4681-8F5E-F1A51CFD480D}' />
    </worksheet>
    <worksheet name='Forecast of New Cases of Germany, France, Italy'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]' scope='rows' value='New Cases' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' value='*dddd, mmmm d' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-periods='Week-Trunc' range-size='1' range-type='end-of' season-type='ets-multiplicative' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{A3B19176-B374-4A43-A969-82EBF273D470}' />
    </worksheet>
    <worksheet name='New Recovered of Vietnam vs Thailand'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{8D7600CA-F120-4E20-AC68-E6BC41AF30B6}' />
    </worksheet>
    <worksheet name='SEA New Case Percentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[pcto:sum:New Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' direction='DESC' using='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='752' />
            <format attr='cell-h' value='752' />
            <format attr='cell' value='94' />
            <format attr='cell-q' value='470' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <wedge-size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Thailand&quot;</value>
                <value>938.0</value>
                <value>0.69636228656273202</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{0CCD928E-0C97-4BCA-B8BC-03A1F029D0FD}' />
    </worksheet>
    <worksheet name='Stacked Area Chart by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Proportion of new cases trend by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AB5C98FA-619E-4968-BEE9-A1E260ADC429}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39EB2E22-44B1-4617-BC64-B308AAE1751E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Box Plots'>
      <cards>
        <edge name='left'>
          <strip size='209'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[twk:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD6B778E-FAF0-4BD3-BA1A-29ABE6370378}' />
    </window>
    <window class='worksheet' name='COVID Cases Across Continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E1776F3-6F97-48D1-9FFE-7B725B2E5443}' />
    </window>
    <window class='worksheet' name='Stacked Area Chart by Continents'>
      <cards>
        <edge name='left'>
          <strip size='211'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB59B81-CDF4-4470-B19F-75D3926E2905}' />
    </window>
    <window class='worksheet' maximized='true' name='SEA New Case Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{770F747D-13DC-48A5-AAFD-4BA80EAC59E0}' />
    </window>
    <window class='worksheet' name='New Recovered of Vietnam vs Thailand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='12' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D39607E-D82A-4BE2-B66E-3CC02C6147C5}' />
    </window>
    <window class='worksheet' name='Europe Sum New Cases'>
      <cards>
        <edge name='left'>
          <strip size='169'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450972991489:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{08DC8508-DE9F-4F6D-A956-84CA7407F8C1}' />
    </window>
    <window class='worksheet' name='Forecast of New Cases of Germany, France, Italy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='6' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37F65853-E017-443E-8AE8-55CD8D4FAAF7}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1836BD02-5D50-4D67-8F88-499912035004}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plots' width='192'>
      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
      G5Qc5DVUGLEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID Cases Across Continents' width='192'>
      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
      Hwo1jW0fPJknAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Europe Sum New Cases' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast of New Cases of Germany, France, Italy' width='192'>
      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
      poXhI99gZrkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Recovered of Vietnam vs Thailand' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SEA New Case Percentage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stacked Area Chart by Continents' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
