<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='preprocess_data' inline='true' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='preprocess_data' name='textscan.1x8ygn20wdapk61fioblx0sf1w6v'>
            <connection class='textscan' directory='C:/Users/Nam Mai/Work/dv/lab02/data' filename='preprocess_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious, Critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Serious, Critical]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Serious, Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Case every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Case every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Case every X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Death every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Death every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Death every X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Test every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Test every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Test every X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[1 Case every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[1 Case every X ppl]' peg='0' size='3011' />
      </column>
      <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[1 Death every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[1 Death every X ppl]' peg='0' size='17865' />
      </column>
      <column datatype='real' name='[1 Death every X ppl]' role='measure' type='quantitative' />
      <column caption='World Average New Cases' datatype='real' name='[Calculation_445293450974248962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(AVG([New Cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Population]' peg='0' size='3.22324e+07' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='2.17506e+06' />
      </column>
      <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Total Tests (bin)' datatype='integer' name='[Total Tests (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Total Tests]' peg='0' size='2.89088e+07' />
      </column>
      <column datatype='real' name='[Total Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='preprocess_data.csv' datatype='table' name='[__tableau_internal_object_id__].[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]' role='measure' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (WEEK(Date),WEEKDAY(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[wd:Date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>19</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>21</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]&#10;[none:Forecast Indicator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='preprocess_data.csv' id='preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D'>
            <properties context=''>
              <relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Total Cases' ordinal='2' />
                  <column datatype='real' name='New Cases' ordinal='3' />
                  <column datatype='real' name='Total Deaths' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                  <column datatype='real' name='Total Recovered' ordinal='6' />
                  <column datatype='real' name='New Recovered' ordinal='7' />
                  <column datatype='real' name='Active Cases' ordinal='8' />
                  <column datatype='real' name='Serious, Critical' ordinal='9' />
                  <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='real' name='Total Tests' ordinal='12' />
                  <column datatype='real' name='Tests/1M pop' ordinal='13' />
                  <column datatype='real' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                  <column datatype='real' name='1 Case every X ppl' ordinal='16' />
                  <column datatype='real' name='1 Death every X ppl' ordinal='17' />
                  <column datatype='real' name='1 Test every X ppl' ordinal='18' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
                  <column datatype='date' name='Date' ordinal='20' />
                  <column datatype='string' name='Country Code' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Box Plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Box plots of various measures per 1M population by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[1 Case every X ppl]' derivation='None' name='[none:1 Case every X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='None' name='[none:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='None' name='[none:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='None' name='[none:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' z-order='3' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk])))</cols>
      </table>
      <simple-id uuid='{A947E7B7-82AA-424D-B3AF-61F2893EC5D0}' />
    </worksheet>
    <worksheet name='Europe Sum New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]' field-type='quantitative' max='6038045.2781360168' min='-4853245.7135656103' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]' field-type='quantitative' max='10804587.274333045' min='4026496.4382196194' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' />
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <geometry column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1ACF68E1-6025-4681-8F5E-F1A51CFD480D}' />
    </worksheet>
    <worksheet name='Forecast of New Cases of Germany, France, Italy'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]' scope='rows' value='New Cases' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' value='*dddd, mmmm d' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-periods='Week-Trunc' range-size='1' range-type='end-of' season-type='ets-multiplicative' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{A3B19176-B374-4A43-A969-82EBF273D470}' />
    </worksheet>
    <worksheet name='New Recovered of Vietnam vs Thailand'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{8D7600CA-F120-4E20-AC68-E6BC41AF30B6}' />
    </worksheet>
    <worksheet name='SEA New Case Percentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which contries in SEA have most new cases in May</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[pcto:sum:New Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' direction='DESC' using='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='752' />
            <format attr='cell-h' value='752' />
            <format attr='cell' value='94' />
            <format attr='cell-q' value='470' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <wedge-size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</field>
                  <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[pcto:sum:New Deaths:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Thailand&quot;</value>
                <value>938.0</value>
                <value>0.69636228656273202</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{0CCD928E-0C97-4BCA-B8BC-03A1F029D0FD}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EE58B12E-26B6-45BE-A23A-D600F9CDD88C}' />
    </worksheet>
    <worksheet name='Stacked Area Chart by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Proportion of new cases trend by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AB5C98FA-619E-4968-BEE9-A1E260ADC429}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='21' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39EB2E22-44B1-4617-BC64-B308AAE1751E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Box Plots'>
      <cards>
        <edge name='left'>
          <strip size='209'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[twk:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD6B778E-FAF0-4BD3-BA1A-29ABE6370378}' />
    </window>
    <window class='worksheet' name='Stacked Area Chart by Continents'>
      <cards>
        <edge name='left'>
          <strip size='211'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB59B81-CDF4-4470-B19F-75D3926E2905}' />
    </window>
    <window class='worksheet' name='SEA New Case Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{770F747D-13DC-48A5-AAFD-4BA80EAC59E0}' />
    </window>
    <window class='worksheet' name='New Recovered of Vietnam vs Thailand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='12' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D39607E-D82A-4BE2-B66E-3CC02C6147C5}' />
    </window>
    <window class='worksheet' name='Europe Sum New Cases'>
      <cards>
        <edge name='left'>
          <strip size='169'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450972991489:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{08DC8508-DE9F-4F6D-A956-84CA7407F8C1}' />
    </window>
    <window class='worksheet' maximized='true' name='Forecast of New Cases of Germany, France, Italy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='6' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Forecast Indicator:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37F65853-E017-443E-8AE8-55CD8D4FAAF7}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1E1776F3-6F97-48D1-9FFE-7B725B2E5443}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1836BD02-5D50-4D67-8F88-499912035004}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Europe Sum New Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2913ddV5rg9zvp3nMzcs6RGaQokiKVVaqkqu6u6p6eDp4Z97J7vGzPLP8B
      /TRvfrM9Hk8/2NPjtTwznp7q1VXuilJJpVJJlEgxJ5AAiEDki4t0czph+wG4l8gAQYgigfNb
      i4vgPfGC37f3t7/9BSkcDgtZltkMwzBQVRVJkjY9Z78gyzJut/tAfFeHJVRZllEUZdMTDMNA
      lmW2UpL9gKZp+P1+AEcBDhDq1/0CzwOqquL1eh3BP4AcWAWQZRnbtvF6vY7Zc4DZVgGEEM/i
      PXaMLMsIIZ7qvQojvizLSJLkCP8B5oWbAXw+H5ZlkU6nn+g6WZbx+XxIkoSiKI7QOwDwwq1s
      k8kkmqahadqGxyVJwuv1Fn9WFIVAIEAwGERV1QPj0XLYGiEEpmluPwM8b8IihCCZTBYXrfl8
      Hljy4gghkCQJt9uNZVlomobL5fqa39jheSOdTnP19k1u37r94plAAJZloSgKLperqACWZeHx
      eMjlcliW5Xh1HDbEtm1+9+mnzIkcza0tL94iuEA+n8ftdlNSUoJpmgghiiO+I/gOG2GYJv/5
      v/wt09PTnD93jnNnz72YMwCwyoPjmDkOOyEWjZLKZPiLf/rPqK6uBnbgBXreRlOXy+WYNw67
      IplM8t13v1kUfniB3KCqquJyuXC5XPs+LMPhq6GlpWXdZ2phEbkZ2Wz2uTAxVFV1dmwd9hxV
      07Qtg+Hg+TCDnMWtw14jhEDdLhRAkqSif/3rQpIkx+xx+Ep4IaRK0zRn9HfYczKZzIuzCHZw
      2EsWFhf51QcfbD8DfN0bYYqiFIPYHBz2gmg0ys07tzF15fk3gZzgNYe9pre3l9v379H20onn
      WwEKgW0ODnuBEILh4WE++s1H6MEAkiQ/vzvBsiwTCAS2ddG+yNi2TS6fQ5ZkR9G/YtLpNP39
      /Vy6fBl3SZCOU8eRlR0oAHw9SqDr+nMl/LF4nN7eXty6m/bWNkpKSp76nh//7hNitoHHlvj2
      O99AUZRitpvj9t1b3G43qqqSSCUJ1lRi5g1gB27Qp00/XImmaei6Xvx7I8XSNK0Y9vA8MTI8
      TP/UGPfGR/jtpYtks9mnvqfb7aaqsxVRHuDm7VukUil+8cH73Ll7Zw/e2GEliqKge3TcHg8u
      XccbDBAeGX22awDDMNA0Da/XSz6fX6dYuq7j8/nw+/3P1Qg4MTFBWVkZqmFh5PLIZUF+9clv
      tk3LTCQSPBx8iGEYjI2PYVkWQgh6798nPDNDOpPBti38pSHGIzP87KNfE00lOXb02DP6ZgeH
      vv5+Ll/+kvlIhMWZCBd//HPS8SRSJBIRW5kahVigvRBISZIIBoMkk0ksyyp+JoTA7Xbj8Xie
      K8EHmJic5P2LnxCqKKNUcjO9OEfz6ROYhsHMnX7+4Lvv4fV6sW2bzy59gaooXDj3CoPDw9we
      7MNUZDxpg7SuUKZ7Od7RzaWBXpCgpLYaj98HLCX0RCNzeOJZTvWcpLys7Gv+5vuHXC7H3/3k
      xzx69IjuCy9TUV/H7MQUNc2Nz3YGUBQF27aLwg9Lo/7zKvwAk9NTKG4X5c2NPBgbZnJ0jGhk
      FrfXA0EvFy9fApYUOZZJEc4miEQi3OjvpeZIJ42HOxmdDQMCraacz+/fpqKlgdrOtqLww9Lv
      pqy6krRP4+KNqxiG8TV94/1HNpslGYtjWCYL0xE0l0ZDZxuqS3u2GWEulwvbtoElwS/4+J9X
      X//s7CzT4TBCgJnPc/Kd14mMTaAsJ+Q3dLez0DcCLClAQPdCbSlXe++iyyry8sx67I3z3P/0
      EvXdHdQf6dr0eZIs4w0F0QyJWCxGRUXFV/8l9zlCCILBIBUV5VQcbqesthppxUC77ZD7tIJZ
      GNULgp7P54s1OAuJ68+j8Nu2zeDwEHOpONP9g8w8GkeWZSrqaympWhLMgas3qS0tRwhBf38/
      7uXv4qopR6kIFe+l+7y4An5sy972uUIIJpNRPvriM5LJ5Ne+E/+ic+vuHfoH+pmPRglVlKP7
      VidTfSVrAFVVKYRZF4S+EM5cmAEK/7Gq+nyGI929d4+L16/gLS/FFwiQz2aZ6h8ilUpy6htv
      ECwvIx1PEH84RmdXJ4/i86iaRkVT/YYKbZkm8hPUIzJyeWYeDtMYKueVs+eey0HieUcIwdUb
      10klkvSODNLz7htFV3MB2bZtTNPEMAxM0yz+Kfx7pb2+UyRJQtf1ouLoul7M4VUUpagYz6vw
      A+huNye7j6CaNhWazquHjvM//Ld/yf/4l/8dVniBiRv38AQD5FWJa7duUtXaRGVzw6aCqjyh
      mae5XdQd6WIkMu3MArtEkiTOnn6Z+YV58rkcscjcunPUlX7+Qtz/yn/vxj4vKM9mxateBDo7
      O+no6KAnk8Hj8RR/B6qqogf8eFvrcelugnXVJDPpr2SEtgwTK511FOApEQLKaquxTJPFmQil
      1VXFY2phRH5aCiaSbdvs1T2/blZWmQOKtn5SmMgLUXLpNL5QgNKaqq/Eg2XbFtFEglwut+o9
      HHZGNptlYnKSh4MPcXl0TNPkyPkzxeNCiL3LBwgEAkiSRDabxe12P5cuzd1imiaTk5OMTUwQ
      np/FsC3yqTRVRzrxhYL4QsE9f6awBSN3HhCoKGV+YcFRgCdgbm4Ot9tN/0A/n1+/xtG3X8XK
      5alqbVp1XmxuYW8UoJBWKYRYZS686ERjUb64ehVUmalIhNrOVqrqulBUDSHsopvzK0GC2vZm
      7Kl5Gurrv7rn7DOy2Sz/4T/9RyRVpbqhDsM2qaivXSeTQghG+wb2ZiNMCEEqlSKTyezF7Z4j
      JNLCxDQMDjW34k7myI6Fic5EnnhR+yRYpkVkdILFsSlePn163wwozwJN0/izP/lTzr50msh0
      mOqmxg3PW4zMUlJZvncmkGEYz0UC/V5SEgrx3qtv4nK5ih6rWDzOxzevkM9mUVQV5SvwZOXS
      aeYGhnnvW9+mqqJyz++/nynUjL1x6yZ6SYDWE0dWOXYKP08Pj9Lec2xvQyEKzSv2E16vd5W7
      NhgI4DWg99PL5LO5Pf++QghmJ6b4zje+SV1t3b4ZTJ4V09PT/OrjjwjPRliYiSCxcTRDaXUl
      o/f7n14BVpZVOQhV2yRJ4vULFxCmyb3PLpNYWNyT+wohMHJ5kgtRKhUPVVVVjvA/IZZl8Xc/
      /ns8tZV0ne6h+8xLsMHvUJIkalubUVTl6U0gTdPw+XzYtn1g2g15PB6OdHRhVAQJlD19Ykw6
      kSQxPYvflgn5fbzy9tt78JYHC9u2+fTzi3S+fpZQRTlCbGz7r0R1uZ5eAfL5fHG3uBDZuV/J
      5XKEw2F0XSccXaShtfap75mYW6BcqJw9fZZgYO/dqQeFmzdvMp2M0dy+5DHLpTNLXkm/r2gC
      pRNJRnofYJkWpVUVLIRn9mYRvDK2fz+TTCb54PNPKampouZYJ5IkkUmmcOnuXS2Gk4tRahQP
      J44c3fe/u68S27aZiy5S3dGCJEkkozEGL10nWF9D2/IiOJ1IMvFwiCNnTyOAaGQObyDw9Arg
      9/vJ5/OrZoL9isvloiJUQpnuQ55PYpgmAd3L3NQscnmQYPnWSSxCCBZnZkktLCILiepAiJ5X
      Tj+jt98/CCHoG+insryCiooKbvfeY9HOU+daCr3JpjNEJqcJ1C550Gzb5tH9fjp6jiHJMhJQ
      VrMUDrFtNOh2KIpS7LnrcrnweDxP/QWfVwpxUys3/iRJwrIs7g/0M56OEapZ+qVvNKLPj01y
      uKqeuppaZEXBpWn73mnwVfD5559z6cqXtLW2cuLYcW7evsVYJMzpb71NLDLH8J1ealqbqe9u
      R9U0ZsYmsAyT2rbmdfd66t++ZVnF7KX9bP/D4yK9BeEu/K0oCscOHabFV0Lk3gCR/mGiKyIP
      c5ks04OPaA1V0NHWjtfrRd9n4SLPAtu2Cc/M4PF5CdRVsZDP8OFHHyGCXmzLItI/RIkBLreb
      xiNdRbM0sbBYHPHXsidrgIIn6CD/h0qSRHVlFW0trdi2zej4GCP3h0GGkC/Am0d6KC8v/7pf
      84UmPBPmw8ufUxsoITz4iPL6GjKWweH2ZuILi8SiMfSSEA3dHcXBSQhBJpVGc29cZWRPFMBp
      PL3ESgE/3H2Iw92Hvsa32X9UV1VTpnl40NdHsKKcnndeJ5/Nornd1B/uQtVUvMEA8Hh2zmWz
      uNyuTeO2dq0AhZBn0zSf25xeh/3DwsICP//Fz3n0aJS8sDn51qvIioLuWyosECwvLZ67Uhbd
      uk4um900RGfXClCocePz+V7oxBeH5xvbtvnw098yODpKMh5H9eootk1sbo66jlZg+8INbo8H
      I5vD5dHXHdvWaLdtG8MwsCyr2JS6YOvLsvxcpzU6vLgIIZiZmeH2nTt8+eUVPEE/x157hfru
      DlTdTXnt403I7ayPbCq9ofDDNjOAbdskk0k8Hk/R1FFVFZ/P91xXdHB48blz5w4zkQi9ffcJ
      +vzMD48Rn1+guqWJY6+dW1dhYys53Gp/alMFsG2bdDq9rkyhEIJkMuk0rXD4SpmanubiF1/Q
      fKybhq52FmfmAEHzke5tr10Z+gygapuP8xseKQj/ZkLudGx8cTEMg7GxMR4+fEggEOD8+fPP
      lfs6l8tx6dIl+h8O4PLqeAMBJgdHOHTu9I7ec6P1gL+khNjcPKGK9W7odXe0LItMJrOp8FuW
      RS6X2+n3cXiOEEJw+/Zt/sN/+Vs++vhjbt669Vzlb8zOzfHpxc/45OJneKrKaTrSTVVzA5MP
      h0nH4k806K48t7SqgkwyteF5q2YAy7LIZrN4vd4tH2bb9nM1ajjsjKGhIe72P0D36LgkmT/9
      kz95bqp3CCEYGxvjQX8/Had7QJZoOrQUcHjqndcJlJVuf5NNSMUTuPVtFsGFkd/v9+/opoZh
      PHc1/B22pqOjg8bGRu7du8fVa9fw+XzbX/SMsCyLK9euMh9dRIro1He2kU4ksQyDioY6gCdK
      t125DkjHkwRKN87bkAsPL9j8O8Hx/ry4uN1u2tra8D5nToyFhQViyQTdZ07RceoEEwNDjPb2
      Y+QNDMPAtu1iWc2t2Og72ZaFb3mHeC1qwb/v9/t3/Auxbdvx/7/ATExM0NXR8VwFLwaDQSor
      KklF4zQf6eb0N98ClmoyCSGwLAtJksjlcsUWUisjcwtIkoRhGMXoBNu2Ka+tZvTBAE2HOlHX
      bNrKlmU9sUvTCX14samurmZwaPDrfo1VuN1u6iqriIxPks9mVwm2pmkkFqNYplkMvxdCFHPQ
      C7NDQeAL55imWazoXV5bzci9B+ueKxdcmkIIbNvekVfAGf1fbCorK/m97//ec+UBGh8f59H4
      GLVtzbh0vSiPsiRhGQYjt+8X5VSW5aIZvrLQckHwC2HrhT8AoYpyJFkmsRhd9dxVklzQJth8
      Z61Q9dnhxUWSJEKh0PYnPmOmp6boqKti+NY9sskULq+HualpAiUhojMRYrPzVC4viOHxQnel
      R3KlV2ttlHI6lli3GJaFEEsd9JZLmO+kK6Rj/jjsNRc//5zyqkpSsTi6x0NNewsut5sTb1wg
      EYtz9r13qah/siIEBcWIzc1z/aPfUdlYt/6cQltSYFXnxs2UoBAF6uAAS22kZiKRp77PW2++
      ycLiIm09R6k/1EF5XQ3Nxw7hCwU5/uor6zq7PIkMqppGSWUFta0bpESutJN2siniuEAdCuTz
      ef7d3/wN4XD4qe8lhADT5v6lqzy4coN89nG0gb80hLbCY/WkFoo34CedSGCZ5rpzZVVVi3a9
      2+0uxvZvZAo54c8OBR6NjvKv/82/AVne8ebpVkSjUdKpFInFKDMjo+SzWUzDIL6wSPjR2BPd
      a63cSrJMqLKc2PzCunNVeNzArtDGNJPJFP2tK7XJ5/M5CuCAEIJ4PEY0Hqe5oZ7KPehm2dXV
      RU11NbbHRWl1JWY+z/XPLmMLQffZU099f5euY+by6z4vLp8LriNgVbDbSm1yguAcCglS9+71
      ImSJrq5uAoGNd1mfBFmW8fp8+P1+0rEEA1du0ni4i/L62lUtjWB3Tpj43DwlVesrba+LaJNl
      eVWTi7X9wxwONqZpshiN8v3vfQ+/y4W6RwURFEXh1MmTmPEkRiKJZVlUNTfQ3rM3VfNMw0SS
      d5ATLEkSHo+n2NQ6lUoV+/o+T1vnDl8PLpeL6qoqhBCUlVfQ09OzZ/cuKyvDQJCIJzj57pvr
      whYKbLUInhkdJ1BaUqwOkUmlmBocoaymasP7rZsBCqZQoddvIBDA7/fj8XicEGiHIpIk8U/+
      /M/3xPwpkM3lmA3PoMoKiWh03fGd7FEN37yHscLWDw+PEigrpaalacOZZFOJLijCyn0CB4cC
      2Wx2z8OpS0pKCJaW4Ksso6ymmkf3+57o+vj8IjYCt3epPKeRz5OKJymvrd70GmdId9gWIQTR
      aBTDMIp94EzT3PM1YUV5OXVtLahuF3c/vYTL9WQmt5nPE3R7MPOFGUBC1dQtmxk6CuCwLel0
      mp/+7Gf88le/JLK867sXvv+1xGIxJgdH0AybdCy+YTHbrXB5dLw+H7HZJX+/5tLIZ7OrzikE
      0BUC5xwFOOAUOnxuhmma/PTXH/BoZIRYLE5TU9Om5z4tlZWVvHr2HCX+AM2Hu9hptMPM6Dip
      WJzJ/kHam1tgPsa1X/2G+fAMyoqF78qixoWfHQU44EiStKUtn8lkGJsYJ2+ZnDx58it1hauq
      ytlz50hk08TmFsitaLu72eI3n8uRmluE8CJnDx3jzMsv88rZc3h1nbufXcbrf5zrUgj7WbmY
      dla3Dlti2TYuJFqamujq7PzKn5fP5ShpaaA2GMDjX1LMzYRf2Db3P7vMqz2nOXHiRNFL2djY
      SFN9Aw0njuALrS6Wu3Z/y1EAhyLT4WkGh4ZpqKtDURQSySThuVkCZWW8dvrlZ7IP5PF40Oyl
      Nqawtc9/MRzh1ZOn6TnRsy4tMujzkw/617WuWrmxK4RwFOCgYpom1+7eocTr5VD3IYQQXLt1
      i9HYIjcGB6hsbUYPBFArSglqCr4nyBl/GjRN4+VDR7kzNUqoduOmFgCJ+UXkhSQnvnlhw/dS
      ZJl8JkvBE1Q4Z21ivaMAB5Dp6Wk++fIyVsjPoeUBdmFhgdGxcWrPnMJX8jhbLJdO48sbVFU+
      m471kiTRUFfP4mKUgb5B3CVBSqorVwlwJp5AT+Z47Rvvbro521jfwPv//m8oqa/hpXff3HQT
      zVkEHzBs2+anH33IQj7L7IMBmhoaAOjv78fTUIumPzZz8ukMgXiKb1147ZmHwRw7coRzh44z
      dO02sdl5jFyedDzBvU++wB1Nc+HMuS03aKuqqqhrqCc6MwvLwr/RH2cG2OcUKiMURkohBJlY
      jFg2w+GWNiorK0kkEkxMTiL53Lh0Hcs0iYZnCGYN3nj7na8lEkCSJBrq6/mnf/wn9Pb2Iudi
      lHh9vP7Hf4rb7d7WHFMUhc72DlKmsWG3+AKOAuxzxsbGaG5+vKG0GF3EME3OnzzFhVfOI4Tg
      Rz/+e/J+L5pYmiGEbTPVN0Be95DNZslmswQCgWKylGEYz2xGKCsr4/XXX9/x+eFwmJqaGgBO
      n3qJvm3KvzgKsM9pbW0t/hyJRPi//+N/4MSRoxw/dpyf/PIXnDh0GFSV+sPdaMv1MzOJJOlo
      FK2llL/7zYfoJSHy6QzCtrAsC5+u8975V5+rzvZjE+MMjIyQikb5g9/7fQA8uk5LQyOWYaBu
      UsnEUYB9zlr3oNflprm5md/85jeMhKd4eP8BmteDVF5KXfeSn1+WZSpamgkdO4y6orti4V7x
      yCzzc/PPjQKkUim+7LtHVUcrqvE4ElRRFNqaW7h0/x7tJ49teK2zCD5ABAIBLAmqq6r4xjvv
      UBIM4Q4FMFJp5sfGi14SX2kJ7S+/tEr4CwghcCfTtLS0POO3X49pmmSzWb64fpXqjjYUVSVr
      5HnQ38fnX3wBQFNjI0rO3HQ/wZkBDhCSJOFWNTRNw+v1cqKrm97eXiJKEn2D4LaNsgKNbJaa
      ktKvNTvQNE2+uHqF2dgi8UQCdyhA9tZdymqq6GxoorW5hc72DmCp5OKRjk5m4wl8ofUzljMD
      HCAikQjNjY34/X5UVUUA3V1duL1eyhrqMHP5bRNOEpE5WpueLEpzr7l55w53B/uJRuaQZZnF
      yCw1rU3MjozT1tyCruurPFeHOrtIhefYKLrOUYADhGmafOc73ylm/J3s6WFsYhx7OTry6k9+
      uq52zkqFyGcytPmDe1IFYrfkcjlu3LtDbHaexUScrGHQ89ZrhCrKcflWN8GIRCKkUik8Hg/n
      Dh1jZmR9eRVHAQ4Qra2tyLJMMpnk008/5dKlS4zPhBGSxMiV6zSfPL5p8ogkSWRmZjnS1f21
      mj/hcHipbqii0ni4k9j8fLFjZDad4f6DB0xNTwNLcUUFd21dXR01Lj/RyOyq+zlrgAPI7Nwc
      7R0dpJJJLl27SigQxLIsaru71gm3JEmM3blH+OEQf/z93yO4hznAuyGVStFw/DCa20WosoKa
      1hZkZTkK9HAXi4rMxL3bvFdauipf2TAMRibGqDrSsep+jgIcQFqXPTj379/nm2++xeTkJLPC
      IjI0DLJCTfvjDuySJFHe2IDu9RCNP1mjuq+CwvPLNyqUa9kM3X1AR0PTqo06IQQP+vqQNAW3
      17vqEkcBDjCNjY1MTk0xHQ6Tc6lYpsHiVJiKxnpUl4vE3Byzj8bxaCpdNfVoLo10Or2qbtSz
      RlEUrOzGBdoy84scb2nnpVOnsG2bRCKBbdt8eesmU7MzaD4PirraxHMU4IAihODO3bv0DvTj
      9flIxKJEp8KEaqoIDw7TcOQQgYoKJFnByuWZlgUqFgMXf8eFQ0dp+QpTI7fC7/eTXlhfMmV6
      aAQ5ZxLPx3C73di2zd//9B+Yi0So6mzFX1lGbHQKI5dHW7G/4SjAASWTyXDn7l28JSHqQqUk
      zDyNVdUYuov6w0vd2CVJIlBetuo6PRjgi967hAIBSkt337p0t2RzOcrbVivfzOg4ycg875w9
      j2VZjIyMcK33LnUnDpO4miWdSOINBtFVjfnRCWq724Gl7DPHC3RA8Xq9/NEPf8gP3v0W/mAA
      r8eLram8fuIk8TWekpVIkkRJZxu//fLyjro27jVCCEZu95JNpYufKaqCYguuDNzn5+//Cl3X
      8fi8BCvLOfPeu7QcPUSF7EKWJFTdhRCCbCqNZZiOAhwECo1P4vE4P/npPzA0PAQsuQkty2J2
      YZHTR47y7dffYDwSwVdWusr/vzaGXlYU8opcrBH0LGlrbeXtc+eZuN1bfMfUfBTFq1Pd3U7z
      yz1MRWbIJpLFa9weD4KlPslKPMPs/UH8iTzeWNYxgfY7iUSCn3/0awxdZaJ/kEB5KUMfvE/t
      kcOU1NUwd7+fP/vu93C5XDzo6yOuq/iXd1ELoQ+2bePSdaQV2VdqSZCpmTCdbe3P9PtIkoSm
      aUw8GqXlzEmEEMSmZ+g5fJTByzdwl4W4PniXP/7DP2Jqeor+iTGis3P88L3vU1FRsW7x7swA
      +5ypqSmi2TTtPcfoPN2DYUH3W29Q3tSAoqp4a6u5d/8+Qghu3LpFPpslE08Qj8wSC0eYvHKD
      oS+ukEtnVtXT8ZWV0jcy8rV8p5u3bmGZNne/uMr8dJi8BJeuX6OpsprcZISA38/Fq1cYHBpm
      dmKKxYUFLn/5JZZlrbuXMwPsY1KpFJduXqeysY65yWkmhx7ReOzoqrRHb2kpn37yKc2NjZzq
      6WFoeJj56QjNtXWUlpYSaWzCaKxBXpMVJskyGU1hYWGhuBh+Vq5Rl8tFfV0jH95aQL41jy0E
      bSGbkydPUlNTQyaTYXhmGqW2nPT0JOfPvsLrF5aS5y3LYnJyksbGxqUqcX/1V3/1r5y2p/sT
      RVFwqyqfvv8h8VicsqYmyhvqEctNpQFs0ySxGGN2YpLXLlygoaGB0z09tDQ3U1lRwfXBATyV
      600HAMWjc7+3l/jCInU1Nc+senhJKITbpTI2Osqc6UMSNiIT5cThDrq7uigvLyexEKU+VEpL
      fQP1tUubZjMzEW7fvs1/+tHfUxYKUVdX5yjAfsI0Tfr6+ngw0L/UzdO2uXHzJg0vnyCdSlN3
      qJt8JsPDS1/iCQZweTxIsoyZzyPiSXpOnECSJH7047+nproGv99PNpFkPp9DdS2lQ65UBFlR
      0MtLidkmiclpGurrn8n39Pl8fPL5l9wfmycn6djI5HFxp7eP6ekppiYn6et7wLvfeIeGhgYU
      ReWv/89/zy8+vsTYxCSzhpcKn8ThQ4ccE2i/IITg+vXrfHjxUy78wXe5NHAPIcBUBB1VFSia
      ytCNm2RSaTqOH2aif4DShgZ0nw9/Js+7770HwP2+B0TNHPbyLHHi6FE++N/+V8rq62g6c7qo
      CAUkScITDDA+FaZieIiOZ7AolmWZ8y+f4vL9SeI5QJIxFQ8zBvzqzjwBZYp/8Y9eRwjBj3/+
      AQOjYW7OKBhyLXOZPIfKTIKhEuLxhKMA+4mFxUVs00SSZVqOH1l1LFhexvELZ8hlsnj9PlRN
      48Glq3S3tvPNb3wDr2eppr5t2Xz/jXeoqV6qqe92u/nHP/xDLt+4vlVxBbSAn2g09pV9t7XU
      1dUS8ihMZ22QVptebeUavf1DXLp6k4vDGSxUkJasHFN2c39R4dGvvuTmjRuOAuwXJEnijddf
      58GDB/R/eY3jb7667hxV04ptgspqqug+8xLHK+qKwg9w6uTJddeVlZVh+n3rFsIFjFyeTDLJ
      YDROj3G8WD1irzAMg4WFBSRZRlVUfD4v//rf/4hs3iSUj5DWKjDk5VwASeJ2ROZ2ZB4QIK1/
      F1tSySoBEtm0owD7Bdu2uXT5MpYMDYe6dnRNqKqcmbk52tratjxPkiR8wc3DoM18juT8Aguj
      40QiEer3YC1g2zZCCPr7BzCFxL/9f3+BKWmEPCpvnWiidyRMWi1DcrnwG3OYWsT8G44AAB5v
      SURBVAVCUgsvXHjzzd9ZdjOQUhwF2C9IkoRH1/GVlZBf3rxa6bffCEVRGBx4yNlTp1GWE2FM
      0+TSlSvUVFcXM7+GHo0wOzmFXl66LpwYwBMI0HjsCNXtrYxMTe5aAQzD4NatWzwcGkLA0npD
      UxkaCjNn+BCSTMbI8cvLfWSUpfKNQlJJaNVIwtpK3jfEwlGAfYMkSVy4cAG3rvPltavkZheJ
      pZIcf/PC5tfIMp5QcJX70jAMHk6O88XNG1TW1aIHg+TyOdx+H2Kb2B+Xx8OjsQnOGcYTm0GJ
      RIL+/n6qqqsZT8UI1FTi8iztPi8kE7jGw+TUIFncZA3X6mpvkvR49N+CleEdhcHBUYB9hCRJ
      HDt6lMWFBaZTMVpPHNn2Gll3kcvl0JeLYum6zon2TgZqqymtq0WSpKLgbLfRZVsWAd3DTCSC
      sG0CgQDBYHBH+wPXb96gqbGRkdFHVLQ1rUrNrO9qx742s/KLbnu/7RBCIOHUBt136LpObV0t
      mZRny+ZwBQo9swqMPHrEnYF+bNOktK62eM5OyCVTSNkcH9+7jebzYeVztJdU8MqpU9veI55K
      ceNBL5XBEmaGHlHb9didOvRgGFPWt7h6Z6xrjmEmHQXYbzwaHeWzq1dwlwQY+80Anad7aDl2
      eMNzhRCEFPcqc6WutpY/+b3fp/fBA8LZLK4VHqLt8ISCGLqbSk0rBs5NLSwy8PAh3V2bL8xt
      2yZu5VF0Nx63Ti4cxsjl0NxuRnr7GXk4gZD3LvegoAiGGnAUYL9x++4dAlXl6MEAb//ZH25a
      E1MIweTAEG8dXe32LJhChmGQy5hPpAAA2pqiuZ5QiPnZ+S2vmZmZwVdWQmpukWlrjqSVJ59d
      UoCxoQnCCRn21rMKLPfC3vvbOnwdJJNJfvn++0xNT1Pf3UFtW/Omwh+bnWO8b5DY5AxVleu7
      sKTTaSajiwTKyja4+smIz84WN9U2Y3RigpKaKvSyEMMTY2guV7E/2GvvvUVdaIftIneBMwPs
      E/r6+5kIT5GTl/rlrkUIwczIGFoqR9DtoaGyjpLOI6sWqLOzs/QODDCRjlPa0fJU7yOEIJ/J
      QCJJy7mN7yWEIDwzQziXpMJdRk1rMzWtzauOX/vtJSYSOkLe2UL8SXEUYJ/Q3NTE5zeu0XC4
      g9mJKSob6orHRu/341ZUmksqOPnKCRRFWSdIkdlZfvLrD6jpOUpF3dO3Q7JNk6GLl/ivfvhH
      m3qBcrkcP//gV7S9embdsbsXv8QwbYaGI+SFF7HcmV5VVWzbXtXudK2nqvAZsOrntcfAUYB9
      Q0lJCV2NzVz++CKBynL8y4VgI6MTlNgK50+foaSkZNMR1Of1YqVSRMcnUdNZrJIAoepqXN6l
      EiiWYbIwNUV5Q/223qV8Jsv9j37LX/zJn27aW8wwDP7L3/2IyclJJn40xSu//x0CpSXF47ce
      zDKbcoEUxLLyuFwuDMMgn88jSRKmaWJZFpqmLUW+ClH0ZkmShGEYxfqghU3BwvGVXi9HAfYJ
      mqZx6uRJFEXhzt27RHof0lBVzdm2btra2rb1xft8Pv6bf/ZfFxNcrt68iZRIM7Ecg5Man0Iu
      DW0r/JZh0PfpRbpb2wgFg5imueGm2M07t0lJNtiCuu52poceMWXbdLx0AkVVOdZdyW+vL4Cs
      FEfulaO8LMvFv4v9vlS1qBgFFEUpKodhGMVFfgEpmUyKrTqFO7xYFARAluVdBaUVKj0kEgnG
      JsYxDINUKs1oPEp5d8e2NrgQgsWpaWLTYRQkXj/ew+FDh4rH4ok4V2/e5MbdO2SSSVy6Tl1X
      O9XNjcxPzxCbnaOyoY5Hg+Nc6k2BoiGEwFw2gRRFwTTNVaN9QTEKylBQgIKpV5gBDMNgbe6L
      owAOq8hms8wvzPOTX/yCmlMnyKXTGLkcJTU16P6dy4mRy5F+NM43zpzF6/EyMTXFg4eD5N0S
      Ve2tCGGTy2SQJBlv4HFvAiEEgzfv8Nknd4iqdavuuVHp9p0uijeMjXK6RDqsRZZlPrt+jfoz
      L+EJBfEvF8Zau+C08gZTAw/xhoIEKyvJJhK4PB5Ut4uFoRFKVBffe+0NZucX+D9+fZE5NIjP
      8+5LbYBYFZq9FsWlgbq7JnxrF7krv9eKkwBw285OsMMKLMtidGwMtaIcz/IiOrWwiBGLoxgm
      wuvBlGBh+BF+r5fZsXGaq2sISRpH6upIpdPE52K8+843i7b2by99ScRfsRS/4/Vz+dYgdvYO
      b755hlD5+n2GQuh1TYWX2Ky5ZZDbZqP/2qC3NQfRRZL2Wo1jp084CuCwhBCC/ocPuTIySM2h
      LpILC/jLysjOzvHds+cpLS1leHiYTCZD8O12amtqGB0bo7GhYcuWqVnTBJaPKyqxmg7Iprn0
      6VXOnD9Jec36TbKqxgbOvqUx8aPPSbAU9lwwXzYKzNtJsJ5kG3hJEfJrvP3N01Q31i8l2Dzp
      L8ph/2FZFpPT09ydGEUSAmtwFDsWY3EhSnUgRGnpUk+w9vbV+b4d7dvn/2YNEyRBIVhfkiTQ
      vcw3HOGTi7cIuRVeffs8bq/n8XGWTBaXIsB+fO3K47DxmmAjvMYcTbVe3njvXTRNQ/c9zmlw
      FOAAU7CXH/T1ceX2LTKmwfffeofm5crPsXgcl6btevd1YmqKkWQe1iaTSRKSqpFr72Fu/CHZ
      dJrhu73UtDRRVlONkctz5cNPWRCb71tsxoblWzSNoye7insjq853vEAHl/7+/mLbJNu2iczO
      Ul9Xt6XQFdykm+0rZHM5bt/v4+6jMQZykPSVbhm/L9JJ9IVpTFtwvruWhq52wiOjpBIpPvpt
      Pxk5tOn1a2eATd9bCJoCSX7wT95DXaPQzgxwgOnu7l71753U9ZmZmWFyeprJhRiSLPG9N18v
      +uTz+Tz/188+oA8vQi/bUQSn5PWT83YiTINrExGSmfvUNdZSVltNx9AUd8YtpB1ke205U0gS
      lqRt6CFyokEddswvf/nLpZFfUflgPsfF0TCzs3Ok02ksy2JhcZGxeBqhP1kINYCkamTL6riz
      aPO7y7188tsrjIfnkVe57cWGo/5OzKSZqM3E4KN1Jd0dE8hhxySTSSYmJpBkmR/f7mdcC6LE
      55HzOVqDHuKGRVjzgffpG+kJIRC5DJmr18hYOjYKluwCdibwG+GXUpw6Us7Lb72CtBxK4SiA
      wxOxsLCAEIJLd3r55aIJrmUXZ2Fk3uNwZTu2gB2PYhsmxswMVtYko5TtKAl+LUII3OQ431PG
      8VdO4XK7HQVwWE/B1LAsiwcPB+kbm+TM0UO0NNQXj//u6nX+bjLxWAGewTsB2JEpog8mMZTd
      yawQAhc52qoU3nrvgqMADqvJZrN88PllJuIpkskEYQOyFXXUJOb4wYkuBh6NEo/HUd1urlhe
      hO+r7xtcEH6RSZG42Uva8rJbU0gIgYqBx4pzrKvUUQCH1bz/ye/4+dg8dqgc5OXQZ0kC20JO
      xrB9BV+6BLK85ybPWlYues3xYaLDi8UKEbtaCwiLOk+c8++epbSm2vECOazm1JHDdMSnkVKJ
      JeEuCJmsYAfLQFGX/yjPVPgBzNl5THnJ5NqN8Gsiy/Emmde+e4GKxnoUTXX2ARxW43a5SGZz
      oKpgW49ngWfMujAHITBTOWBlacbVYRKb3aOgLH41x8k3XsUbDDzOIdjDd3bYB5SUlPDn/+gP
      6VHzvCwSBGOzSNn09hd+xdiZNJa9JK6SbeIz59DNOLqVeOyBWsGqiFA7j2Jniec1ph4OrT7m
      rAEc1rKyJerIo0dcufeAawOD5MpqEZV1S7b/M3oPADubgVwG89YNLFT8bjh+sh1JVsgsRhkY
      nieel0jKJfisKEJWSeNDF0mqAoKycj9ltVVMD0+guV288v13HifKOwrgsB03bt6kqbGRi1eu
      8uF8DtsXRNrE/WlZFrZtoyjKnvQME6ZBWd8lWg530XXyGKq22mo3DYM7Fy9T3tLKF+9/wUtv
      nELVVMb6hmjobKGmreXxu5km6XiCQNnjKnOOAjhsSyKRwO12k8lm+eWvP+TzvBs7uHGpwlwu
      h8vlKlZuKMTf2LaNpmkYhgEsdXrM5/MoilIMT9goh9mameCd7koa2prXHQNIJ5Lc+O1Fjn3j
      LbLJFL5QcFU/Y4BoZJZgRfmGC2dnEeywLYHAkq/f5XLRUFuLbyRMYovz8/l8sUKDruvFWaGQ
      rC+EKAp/QTmAVfV+ANTZCV7rrKS+tWnTZ3l8Xpq7Oxj68iouv5/pvEHjscM8vNXLWCSOrCgo
      Zp633nsTbYNKeY4COOwY0zSprqygZGp+SwUoZIiZpgks1QBaF4Upy6sUYm2xLjufpV4XNLU3
      b53pJcs0dndQ0VDL6IMB7k5GGYreIa2HMBsbls7Jpbnz5S1a2hvxl5bi0t3OGsDhySksjB+N
      T/DXv7tCuqSapXDN1Vlaa6uybZayuFk8vxAC13g/L7dWkk9n6Djds6o75exkmFBZCZruZuR+
      P4FQCBD8+pMb5ENVUFm33jFkmSiJBbRsEtXIUioyVDc3OG5Qh51TKETV2tTIPz/fQ8nIXUjG
      152z9ufNQpYLn290PBeLcq1vghtDYTLJZPHz2clp3v/kBjPjkyAEvX2j/O76Q379yQ1yLi9U
      1m/kFQVFxSqpIlvTRhqNY2dO0XnM6RPssAskSaK5sZGT9dV8EYuT94e2PP9JEtmLs0JpJfna
      ZkQiSmQyjCfgJ7EY5eHgOEZ9J5/fn6R1dIK5QB22vwSpUsByY73tsAKlROfmqWlpdBTAYXcU
      yp5oqkJ+h9dslJG1WR0fqf5x58pLNx9y/WGYlOpBeIPg85CubOH+SC+iuWn5egmUjQ2aVbNS
      LoMQNtlMDiGEYwI57J5XX30Va5vGeTut3FBgnTmkuTH8paTquqCqEZaD8SRFgY4TSJpr60Vy
      4Vg+i5yMckpJ8S/PHkJOpJmdmHJmAIfdoyoy1uw0ci6HXd+24+C4tUqx2SwAIPsCSDOTiGwa
      dO+m522lBPpimB921tJY20pXZyejo6OkrDzRyKwzAzjsnmg0ilHXBrH5dfE4K0sp7oQNPUJC
      YE0+AtMAbeNuN9vdc6kbJLQ0NtDV2Qksdb5v6Gij86UeRwEcdk80Fkd4vNgthzY950lNoJVx
      SEgSdnwRUdOyFIK9xTWGYZDLLdn1tm0XN95s2yYTrORnX1wr7kv4fD5qfEEmHgw4CuDwFAgb
      JTaP8AYQOxjpd1PkSm0/jDT+kKXQ5zWPX1Mlwl72AlmWRTabLX5uxBfxZuKryqifOXGSl9u6
      nTWAw+6xbBvL/7iry1Ymz24rOVjZDPiCyxbWY2GXjTwIgVC1YnRqYTd5bbcYGUFXV2exYwyA
      3++no73dUQCH3SGEYGYxBp6Nowj2opmdEALF48fMjEI6CQjwBtCySX5QHyTo1bkzGeFO0kZ4
      AkXzR16hEAC220tarDd2JElyFMBh94zFUrBHYTSbKoyqojR3Is1NIxZmEe3H+V5dgG+98Sqy
      LHPOtnkwMMhHN+5wX/JjafqqfAVJkpDdOu/3j9FSU8Xhrs5Vz3LWAAcAIQTT09OMjo6SyWTW
      2c5PulCFpYjPRcPa/sQ177Gbym6S7kFxuagsCfFOEL796iuPR3lZ5tihLv6nP/1Dznhs1q4V
      hBBLPc5kjf/9yz7+8/sfEU88DuVzZoB9jm3b3O/v59qjYRSPB8/DAcpVbalCsyRhCoGlyJTp
      Hro6OwkGlzaahBDkcjlyudyqzwoCPBOJkFD1pzJ1JEBbjGAEy4sVJlYGzxUoj4b5o1eO09bY
      SCAQ2DDRRpZlGkqDSJFcMY951X1KqzAliY8TBn3/8CH//O1zNNbXO9Gg+5VCOuP84iI3eu9R
      fuwoesBfbGCtut0glveuJAnbNFkYG0dkc/hdLkxhE8/lUTWVMpebjGkiCUF7bS1zC4vcejTB
      ZEkDkse77busfKcCWjrBSQ/84PXz9D54wI3pOVLpNHO2Qqa0CiQZLIum5Az//fe+RUlJaFtl
      i0Rm+Z9/9RmJQMW658EKM0sIeqwo/+If/Z4zA+xXrt+6RV90AXcoRN0rZ1cJj8uzvnitomlU
      tret+mxlNX2XEAhgIp1Ba6yjFpvwtTuYXT1Irp3V6Skcr0gt8Gcnu+hsb0dVVV6/cJ4Lyz77
      gaFhPn/4iAcLCRo1+N65l7YU/kIyzWI0SkVFOfWqTd+a523wIoykDKKxmKMA+5WpcBhXZTme
      4B5VbpMkJMC93F2lsqmR10JBpkbGmIikSPvKEIESkCVENgPpBFJJBSjqOkE85FXo7uxcZcoo
      ioKiKBzp7qK7o51sLofudm/Y1b6AEIJPPrtIaWkJ3R0djI6NUSbbaLG5JbNqi/yDhMvL4OiY
      swjer7z12quMX71GdkUs/W5Zu1CVJAlJlvGVltL5Ug/nz/dwrsFPQ2qKyvlRqqPjnK72ULsw
      ijZ8d9mF+RjXJlGbhXurqorf50NV1ytPgUw2y0dfXObjgUfMxhJIksTo2BivnznNnx1txpvb
      +nsL3celwVFnBtiv+Lw+OhubmJmcpqZr6wbXO2l+vfbclYtV3edD9/moaGxYlQVWXl9P/8WL
      pBdGWYgo2LoPPZ+i30iTf+etdV3bd4pt2/zD7z7nsyTYFU0kc3lcLhcXXnkFl8tF6dwcR4eG
      uZs0yfpKNg7SkyTu2T5HAfYrsizT0tLC+IP7zI2OUVpXi7pcrWE3bs8CK3d7V6YwFlh5zOX1
      cPxb38QyTSzDJJNILCW2jE0Qj8efSgHGZyKI0kYkIcgaWWRZLm58hUIh/vIf/yFjE5P8209v
      EPVu3KZJKJqjAPuZqZkZJElgZzMMfnmF0rpaXF4f0/0DyIpM/ZEj+Ms2Lm9SYCfKstEMsvI6
      RVVRVBWXZ1ngVYWn8TwqikJjaZCRfBbJsuhqWd3aqVBepbW5iT87Gec/3Rgg5i1FUpTHlaYL
      lSd2/RYOzzWSJFFWWoJZXYbqcuENBlA0lWwyxcl3XicVjTF48w5dr15AUbduRr1l4+ktritQ
      uN4yTbJz8/TUN+L17tx9utG9j7W18Pm1PiRVo7ps826Sp48fw6W5+HfX+kl5gutmLWcRvI8p
      DQbJpzNobhdVzY2U19VS39WBoigEykqpbKhjcWq6eH4hlmYtu+nNu/b6bCKBFo7wZkcXJ48d
      e+pYofa2No75FGrNNJWVlVuee6y7k7842Y4rOgPL36/Yj/ip3sLhuaaqsgorlVr3uRCCufFJ
      0qkM5Su6vuTz+WJIcSGmHpbKHRbOAVYd24zChlsiMstC/wDVeYvvvPEmtbW1Ty38hmHg8Xj4
      829/g45SH+FweEvFlCSJk0cP869+/216rEU6M7NUpOaRhO2YQPsZv98Phrlq4QqQjieYC0do
      PtmzThht20aSJCzLQgiBpmlYloVhGMV6n4XEEk3TNq3/mZ6JUKdq1FbX0vTyWVwbVGXbDblc
      jitXr3Ls6DH+n48/pzenkrlxh3/atHn1OFhSgqrKSv7lP/4BAPPz8/wvH3zuKMB+JpvNYi8L
      6EolcLndrG0xJEkSLpcL0zSLSlCo77myXCGsb5K9do2QicWpRua1c6/sSVj0SsIzEX52b5if
      Ds2w6CsDt8z1+WneW1igorx82+sL7+PxeDjhkxwTaD8zNzeH4n+82Cx6QBBo+urqzoW0QqDY
      OV6SJDRNKyaYFGaAws8buVQt0yQ7PkFnW+ueCz9ASShIhU9n0V+xFPQmSaQCFfQNDj3RfTwe
      Dz/87rcdBdjPTM9G8ASD6z5PxeJoa3zwhRmgYNZomlbciS38XBj5twphTo5P8vtvv0N93fZd
      5zcKj96OUCjEd14+gZzPFD/zpxY52t31RPeRZRm32+0owH5FCEEym1lVU7NAfG4eb2i9YhQo
      lEDc7NhmZGJxjtXWEQptXCmuMMtEo1EApqen+eiTT0g+YbiGW9OQ8o/LcWVtgWmYT3SPAvtC
      AQpJHg6PsW2b+UQCdUXNfSEE+WwWM28gK3vb+0vYNlo0xtFDm1eIiMVi/PLTT/m7939F30A/
      uq7j9XiYmp7e9JqN0FQFacUMgJFH13fXr/iFVwDLshgdHXUUYA1T4TAEVu+25tIZrr//G2S3
      jneTUXq3pCOznDtydFXi+UqEEPz0w1+T8bqpPH6U8elpSktLuXDuHJ0dHU/0rEw2h+1+vLbx
      q1KxJPuTsi8UwOV2fyULrheVVCrFtcE+KhpX2+G6z0tlUwMltbVPdf+1VZ0lScJIp5fcrltc
      8wff+jbNmo45HeZMz8lNK0Nvx+xiFFv3LhXjyqao9em7bsf0wiuAy+WirXVnHofRsbFn8EZf
      P8lkEmtF66ECkiTReLib8MMBbOvJ8nm3w11exsT01KrPwjMzfPDxx8XZORQKcfzQIb7zygVK
      Sko2us222LbNxKMRtMQCgeg0f9lVzbsnDhUD4Z6UA7MPEJ4JU1tTA0D/w4cE/H7qnnIkfF6Z
      iUTI5fMMX7tJ+5mXgNXpgJIk7fkawBMKcWdqGr/XR1NjIwCRuTmCgdUJOVvNEjtBlmX+6Ad/
      QHdfPx6vl2NP6P1Zy75XgMXFRb64fAlZlsmkM7z26qsoikwm/fX3vv2qaG9v537fA0AiHY/j
      W2Hvjz3oo6q9fVf33SoozszlkAyz2E8MoKO1lYeDg7t61lZ4PB7OnDq5J/c6EEnx0WiUqzdu
      0NXRTnPTxt0G9xvT09P0DwwwpyuU1lQXP58aGsEwbSpbmtd1U9yOzRTAyOVQp2d499XX8GyQ
      b/y8YFkWuVwOy7YJLM9E+34GgKXu5998552v+zWeKbW1tcwtzBM3Mqs+L6ut5vr7H1He1Iiy
      Rw2vYxOT/NGF51f4hRCEZ2b42998hqyqLOZM/qCnm2QycTAUYDuEEPzsl78gm81x9PAhjh45
      +nW/0p6gqhoi/9jUE7bNyJ1eDr3x+pY5ABuxWUsjI5ejJVjy1Lb9V0kul+Mnn16i1125VH9I
      Ffx17yTCpb/4XqC9QJIk3nnzLU719NC0TVThi4RH1zGX43sA0okEmte3qz2Ate5KyzRZGBom
      M/yIimDwuXZD67rO9199hfb8Ip747FJRXd0HsnIw1gAHlcvXrjKnq+h+31KUZjLF4K271HR2
      oLpc6LsctS3ThOkZ3jr9Mj6vd8vSJbtls43NlRldq3oJwLbvYZom0ViMn35+hSspCdPlcRRg
      LaOjozQ1NT3XI9pOEELw//38Z8iepU7tlseNyOVpCpWiu3X6w9O4G+tRdxGnHx2f4FvHTlC1
      TSbWTt5xpWm1Urgty8KyLJTlPF7btotRqIWyjZIkkclkikk8gUAAt9u9qblWwLZtLt28zZ2R
      cUcB1jIxMUFdXd2udxafFwoZXoUE8WgshkfX8Xg8CCFIZzJ8eOVL1Ia6ddea+TzphUWEZaF6
      PAhhYxsmsm2TT2eo8nr59utv7GqQKAizEGIpX2H555XRqIUGF7lcrhiRWkjIUVWVbDbL9PQ0
      9fWrd7pdLhder5f08q60LMskEkkWFhZobl5v2tq27SjAQebjT3/HjEslULFUSzObSJJZXKRW
      99LV0IDb7SYej2MLgdfrxef14vF60VR105gfeCzkK1MnC6NyLpcjn8+vq04thECWZVRVLWaj
      wfp8ZNu2GRkZoaGhAV1fX5xXkiR0XV9VdSKXy20aK+R4gQ4wF86e428/eB9vSQlmLk8wnuTN
      4z2UlpYWBby6unqbuzymIMimaRYrS+8kd3hlqZJCuuVmMUKFhJyNhB+WFrxr3bGbCb/TJ/iA
      o+s633vtNbTpCOmBQc6cOEFFRcWWo/tWCCFIp9NEo9Gibf40rFzkFkwlYN37rTxnq3KKG+HM
      AAecirJy3jp3jvHxcdxPGFW7UkALHRozmcy642srya1ks5F+q/D2td6flWQymaIptZPv4ijA
      AceyLDKZDOXl5SjLEaQ7dQAIIUgmk+SXs7PWmjNrq7DBzgtrbVrbH7aM/Mzn81iWRSgU2nYm
      W2qg53BgKYzchcVqIpEoCpBpmuTzeQzDIJ/PMzIysmphW1CcgvCvNFHgcVqlLMs7EvrC+Rv5
      +ddiGEaxVtFGrH2XrXBmgAPOyn66tm0Tj8eLZVBWClEgECCVSjE3N4fL5ULX9R0L2pNk6xUr
      tm0xCxWqU2zGk7iwHQU4wBTckRsVx1q5gJUkCdu2SafTeL1ewuEwfr9/VfxP4T57sYG49j5r
      Fagws2ymWB6PZ8cLeUcBDiiFjagCG/nTN/LVw9JsEI/Hd1zheSthXfm87RbEtm0zNTVFIBDY
      9Fyv14vH49mxIjoKcEAxTbNYCGsjthqFdV0nFosVz1t5zVb32+zem3228pgQgkgkQmlp6YaR
      p5IkEQgEntiFq+ZX1FdxODjkcrlNF5LbjdayLBfLm6/csd3ouo28OWsXyztp2pHL5fB4PMVQ
      DlVVMQxj1fMLm29Pwv8P1Oglwu0tEUkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Forecast of New Cases of Germany, France, Italy' width='192'>
      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
      xAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='New Recovered of Vietnam vs Thailand' width='192'>
      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
      TAGYNDT/H4+KJyA2zV1vAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SEA New Case Percentage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stacked Area Chart by Continents' width='192'>
      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
      8/8D6mbtOCrWTrIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
