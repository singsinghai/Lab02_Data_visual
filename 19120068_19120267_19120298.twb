<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='preprocess_data' inline='true' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='preprocess_data' name='textscan.1x8ygn20wdapk61fioblx0sf1w6v'>
            <connection class='textscan' directory='C:/Users/Nam Mai/Work/dv/lab02/data' filename='preprocess_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious, Critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Serious, Critical]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Serious, Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Case every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Case every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Case every X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Death every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Death every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Death every X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Test every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Test every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Test every X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[1 Case every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[1 Case every X ppl]' peg='0' size='3011' />
      </column>
      <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[1 Death every X ppl (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[1 Death every X ppl]' peg='0' size='17865' />
      </column>
      <column datatype='real' name='[1 Death every X ppl]' role='measure' type='quantitative' />
      <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
      <column caption='World Average New Cases' datatype='real' name='[Calculation_445293450974248962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(AVG([New Cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Population]' peg='0' size='3.22324e+07' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column datatype='real' name='[Serious, Critical]' role='measure' type='quantitative' />
      <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='2.17506e+06' />
      </column>
      <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Total Tests (bin)' datatype='integer' name='[Total Tests (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Total Tests]' peg='0' size='2.89088e+07' />
      </column>
      <column datatype='real' name='[Total Tests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='preprocess_data.csv' datatype='table' name='[__tableau_internal_object_id__].[preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D]' role='measure' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[1 Case every X ppl]' derivation='Sum' name='[sum:1 Case every X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious, Critical]' derivation='Sum' name='[sum:Serious, Critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_445293450974248962]' derivation='User' name='[usr:Calculation_445293450974248962:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (WEEK(Date),WEEKDAY(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[wd:Date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>19</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>21</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]&#10;[none:Forecast Indicator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Algeria&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brunei&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Faeroe Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Guyana&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Kiribati&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Martinique&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;New Zealand&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Romania&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Tonga&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Zimbabwe&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Benin&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Channel Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Ecuador&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Gibraltar&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Israel&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Macao&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Mozambique&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Papua New Guinea&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Vanuatu&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Comoros&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Eritrea&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Guadeloupe&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Maldives&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Nauru&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Tanzania&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Wallis and Futuna&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Antigua and Barbuda&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Cabo Verde&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;French Polynesia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Latvia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Niue&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Saint Helena&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;South Sudan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Turks and Caicos&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Andorra&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Bulgaria&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Cuba&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Falkland Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Haiti&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Kuwait&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Mauritania&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Nicaragua&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Solomon Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Trinidad and Tobago&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Botswana&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Congo&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Estonia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Guatemala&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Jordan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Nepal&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Portugal&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Singapore&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Thailand&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Western Sahara&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Azerbaijan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Cayman Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;DPRK&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Ireland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Montserrat&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Palestine&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;San Marino&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Suriname&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;USA&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Bermuda&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Chile&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Egypt&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Libya&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Madagascar&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;MS Zaandam&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Paraguay&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Senegal&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Syria&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Vatican City&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Barbados&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;CAR&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Dominica&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Gambia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Mongolia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Cook Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Eswatini&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Kazakhstan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Malta&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Qatar&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Sint Maarten&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Timor-Leste&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Argentina&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;French Guiana&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Iceland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Lebanon&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Micronesia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;North Macedonia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;UAE&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Armenia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Bahrain&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Diamond Princess&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Lesotho&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Moldova&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Saint Lucia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Uganda&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Belarus&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Caribbean Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Dominican Republic&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Georgia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Liechtenstein&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Montenegro&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Palau&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Samoa&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Sudan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Uruguay&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Bahamas&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Belize&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Chad&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;DRC&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Ghana&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Isle of Man&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Morocco&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Panama&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Sao Tome and Principe&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Uzbekistan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Burkina Faso&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Curaçao&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Fiji&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Honduras&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kyrgyzstan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Mauritius&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Rwanda&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Somalia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Albania&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;British Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Costa Rica&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Guinea-Bissau&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Kenya&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Marshall Islands&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;New Caledonia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Réunion&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Slovakia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Togo&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Zambia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Bhutan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;El Salvador&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Greenland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Ivory Coast&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Malawi&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Myanmar&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Peru&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Serbia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Taiwan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Venezuela&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Aruba&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Djibouti&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Gabon&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Liberia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Monaco&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Oman&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Saint Martin&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;St. Barth&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;UK&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Anguilla&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Cyprus&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Hong Kong&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Laos&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Mayotte&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Nigeria&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;S. Korea&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;South Africa&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Turkey&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Bolivia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Colombia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Equatorial Guinea&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Grenada&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Jamaica&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Malaysia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Namibia&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Seychelles&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Tajikistan&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Serious, Critical:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk:2]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:1 Case every X ppl:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450974248962:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='preprocess_data.csv' id='preprocess_data.csv_8F1D323D18704E659F8CDFB34989D06D'>
            <properties context=''>
              <relation connection='textscan.1x8ygn20wdapk61fioblx0sf1w6v' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Total Cases' ordinal='2' />
                  <column datatype='real' name='New Cases' ordinal='3' />
                  <column datatype='real' name='Total Deaths' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                  <column datatype='real' name='Total Recovered' ordinal='6' />
                  <column datatype='real' name='New Recovered' ordinal='7' />
                  <column datatype='real' name='Active Cases' ordinal='8' />
                  <column datatype='real' name='Serious, Critical' ordinal='9' />
                  <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='real' name='Total Tests' ordinal='12' />
                  <column datatype='real' name='Tests/1M pop' ordinal='13' />
                  <column datatype='real' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                  <column datatype='real' name='1 Case every X ppl' ordinal='16' />
                  <column datatype='real' name='1 Death every X ppl' ordinal='17' />
                  <column datatype='real' name='1 Test every X ppl' ordinal='18' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
                  <column datatype='date' name='Date' ordinal='20' />
                  <column datatype='string' name='Country Code' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='preprocess_data (2)' inline='true' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='preprocess_data' name='textscan.06vo60t0cih8cy10th2kj1e9dx1e'>
            <connection class='textscan' directory='C:/Users/Nam Mai/Work/dv/lab02/data' filename='preprocess_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06vo60t0cih8cy10th2kj1e9dx1e' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06vo60t0cih8cy10th2kj1e9dx1e' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Total Cases' ordinal='2' />
            <column datatype='real' name='New Cases' ordinal='3' />
            <column datatype='real' name='Total Deaths' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
            <column datatype='real' name='Total Recovered' ordinal='6' />
            <column datatype='real' name='New Recovered' ordinal='7' />
            <column datatype='real' name='Active Cases' ordinal='8' />
            <column datatype='real' name='Serious, Critical' ordinal='9' />
            <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='real' name='Total Tests' ordinal='12' />
            <column datatype='real' name='Tests/1M pop' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='real' name='1 Case every X ppl' ordinal='16' />
            <column datatype='real' name='1 Death every X ppl' ordinal='17' />
            <column datatype='real' name='1 Test every X ppl' ordinal='18' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
            <column datatype='date' name='Date' ordinal='20' />
            <column datatype='string' name='Country Code' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious, Critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Serious, Critical]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Serious, Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Cases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Case every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Case every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Case every X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Death every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Death every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Death every X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Test every X ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 Test every X ppl]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>1 Test every X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[preprocess_data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Rate' datatype='real' name='[Calculation_1050746126646198279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Deaths])/sum([Total Cases])' />
      </column>
      <column caption='Top TotalCases and Other' datatype='string' name='[Calculation_1560778784028012547]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Country Set] THEN [Country] ELSE &apos;Other&apos; END' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='Top TotCases/1M pop and Other' datatype='string' name='[Top and Other (copy)_1560778784030695428]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top 3 Country (copy)] THEN [Country] ELSE &apos;Other&apos; END' />
      </column>
      <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Vietnam vs Others]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Vietnam&quot;'>
            <value>&quot;Vietnam&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='preprocess_data.csv' datatype='table' name='[__tableau_internal_object_id__].[preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1560778784028012547]' derivation='None' name='[none:Calculation_1560778784028012547:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top and Other (copy)_1560778784030695428]' derivation='None' name='[none:Top and Other (copy)_1560778784030695428:nk]' pivot='key' type='nominal' />
      <group caption='Top 3 TotalCases' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Total Cases])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 3 TotCases/1M pop' name='[Top 3 Country (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Total Cases/1M pop])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country Set]' type='palette'>
            <map to='#76b7b2'>
              <bucket>(&quot;Singapore&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Malaysia&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Brunei&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Vietnam vs Others]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1560778784028012547:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Top and Other (copy)_1560778784030695428:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='preprocess_data.csv' id='preprocess_data.csv_89D9C18DF84D4B0999CD0A268DA414FF'>
            <properties context=''>
              <relation connection='textscan.06vo60t0cih8cy10th2kj1e9dx1e' name='preprocess_data.csv' table='[preprocess_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Total Cases' ordinal='2' />
                  <column datatype='real' name='New Cases' ordinal='3' />
                  <column datatype='real' name='Total Deaths' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                  <column datatype='real' name='Total Recovered' ordinal='6' />
                  <column datatype='real' name='New Recovered' ordinal='7' />
                  <column datatype='real' name='Active Cases' ordinal='8' />
                  <column datatype='real' name='Serious, Critical' ordinal='9' />
                  <column datatype='real' name='Total Cases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='real' name='Total Tests' ordinal='12' />
                  <column datatype='real' name='Tests/1M pop' ordinal='13' />
                  <column datatype='real' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                  <column datatype='real' name='1 Case every X ppl' ordinal='16' />
                  <column datatype='real' name='1 Death every X ppl' ordinal='17' />
                  <column datatype='real' name='1 Test every X ppl' ordinal='18' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='19' />
                  <column datatype='date' name='Date' ordinal='20' />
                  <column datatype='string' name='Country Code' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated) 1' name='[Action1_179B6CD99C664FE196591251DE566DA2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Pie - SEA Top 3 TotCase' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Top TotalCases and Other' />
        <param name='target' value='Pie - SEA Top 3 TotCase' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2_8670ECC081A84BF1807A2152AD37D1F2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Pie - SEA Top 3 TotCase/1M pop' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Top TotCases/1M pop and Other' />
        <param name='target' value='Pie - SEA Top 3 TotCase/1M pop' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Box Plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Box plots of various measures per 1M population by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='real' name='[1 Case every X ppl]' role='measure' type='quantitative' />
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[1 Case every X ppl]' derivation='None' name='[none:1 Case every X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='None' name='[none:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='None' name='[none:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='None' name='[none:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:1 Case every X ppl:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Tests/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Deaths/1M pop:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Active Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]' z-order='3' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Active Cases/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Deaths/1M pop:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Tests/1M pop:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:Total Cases/1M pop:qk])))</cols>
      </table>
      <simple-id uuid='{A947E7B7-82AA-424D-B3AF-61F2893EC5D0}' />
    </worksheet>
    <worksheet name='COVID Cases Across Continents'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' z-order='3' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk] + ([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]))</cols>
      </table>
      <simple-id uuid='{EE58B12E-26B6-45BE-A23A-D600F9CDD88C}' />
    </worksheet>
    <worksheet name='Europe Sum New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]' field-type='quantitative' max='7167727.7103873827' min='-3918427.9174662214' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]' field-type='quantitative' max='10072532.495018359' min='3910631.5512762927' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' />
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <geometry column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Latitude (generated)]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1ACF68E1-6025-4681-8F5E-F1A51CFD480D}' />
    </worksheet>
    <worksheet name='Forecast of New Cases of Germany, France, Italy'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' forecast-column-base='[avg:New Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]' scope='rows' value='New Cases' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]' value='*dddd, mmmm d' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label='European Average' label-type='custom' scope='per-table' value='6001.0' value-column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[fVal:avg:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-periods='Week-Trunc' range-size='2' range-type='end-of' season-type='ets-multiplicative' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{A3B19176-B374-4A43-A969-82EBF273D470}' />
    </worksheet>
    <worksheet name='Line - SA TotCases/1M pop'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases/1M pop:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{2BB073F4-A5AD-4D8E-9FAF-1D3A070A4319}' />
    </worksheet>
    <worksheet name='Linear Model for Test vs Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column caption='Death Rate' datatype='real' name='[Calculation_1050746126646198279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Deaths])/sum([Total Cases])' />
            </column>
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1050746126646198279]' derivation='User' name='[usr:Calculation_1050746126646198279:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126646198279:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Tests/1M pop:qk]' field-type='quantitative' max='50986336.137944378' min='1000.0' range-type='fixed' scale='log' scope='cols' type='space' />
            <format attr='height' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Tests/1M pop:qk]' value='84' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='42' />
            <format attr='cell-h' value='14' />
            <format attr='cell' value='14' />
            <format attr='cell-q' value='70' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='power' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='816' />
                <format attr='maxwidth' value='816' />
                <format attr='minheight' value='480' />
                <format attr='maxheight' value='480' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126646198279:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Tests/1M pop:qk]</cols>
      </table>
      <simple-id uuid='{E64A1B1E-C1C6-4150-AFA1-36A843DF6B6C}' />
    </worksheet>
    <worksheet name='New Deaths and Recovered cases in Germany, France and Italy'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]</column>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Deaths:qk] + [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk])</rows>
        <cols>([federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk] * [federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk])</cols>
      </table>
      <simple-id uuid='{04B6B2F6-C675-4FF1-A136-315E0BD676BA}' />
    </worksheet>
    <worksheet name='Pie - SEA Top 3 TotCase'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column caption='Top TotalCases and Other' datatype='string' name='[Calculation_1560778784028012547]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country Set] THEN [Country] ELSE &apos;Other&apos; END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1560778784028012547]' derivation='None' name='[none:Calculation_1560778784028012547:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[pcto:sum:Total Cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_1560778784028012547:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='400' />
            <format attr='cell-h' value='400' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_1560778784028012547:nk]' />
              <wedge-size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_1560778784028012547:nk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[pcto:sum:Total Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{63769DEE-A7CB-4FEC-B067-E9653D9C534E}' />
    </worksheet>
    <worksheet name='Pie - SEA Top 3 TotCase/1M pop'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Top TotCases/1M pop and Other' datatype='string' name='[Top and Other (copy)_1560778784030695428]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 3 Country (copy)] THEN [Country] ELSE &apos;Other&apos; END' />
            </column>
            <column datatype='real' name='[Total Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top and Other (copy)_1560778784030695428]' derivation='None' name='[none:Top and Other (copy)_1560778784030695428:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[pcto:sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Total Cases/1M pop]' derivation='Sum' name='[sum:Total Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Top and Other (copy)_1560778784030695428:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='400' />
            <format attr='cell-h' value='400' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Top and Other (copy)_1560778784030695428:nk]' />
              <wedge-size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases/1M pop:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[pcto:sum:Total Cases/1M pop:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Top and Other (copy)_1560778784030695428:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{97A29A35-1D7E-46D7-9475-E7876CA69E49}' />
    </worksheet>
    <worksheet name='SEAMap- Total Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vietnam vs Others]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Vietnam&quot;'>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' direction='DESC' using='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases:qk]' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='174' />
            <format attr='cell-h' value='58' />
            <format attr='cell' value='58' />
            <format attr='cell-q' value='290' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Vietnam vs Others]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases:qk]</cols>
        <pages>
          <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{77FBB74D-8844-4526-B62B-B7C25FC483BC}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[New Cases]' derivation='Avg' name='[avg:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[avg:New Cases:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{AC6EF13E-3FD1-46E2-B295-1C48C645C208}' />
    </worksheet>
    <worksheet name='Stacked Area Chart by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Proportion of new cases trend by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AB5C98FA-619E-4968-BEE9-A1E260ADC429}' />
    </worksheet>
    <worksheet name='TreeMap - Test vs Death Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column caption='Death Rate' datatype='real' name='[Calculation_1050746126646198279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Deaths])/sum([Total Cases])' />
            </column>
            <column caption='SUM([Tests/1M pop])/1000000' datatype='real' name='[Calculation_1050746126652297224]' role='measure' type='quantitative' user:unnamed='TreeMap - Test vs Death Rate'>
              <calculation class='tableau' formula='SUM([Tests/1M pop])/1000000' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1050746126646198279]' derivation='User' name='[usr:Calculation_1050746126646198279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1050746126652297224]' derivation='User' name='[usr:Calculation_1050746126652297224:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126652297224:qk]' max='50.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126652297224:qk]' />
              <size column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126646198279:qk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]' />
              <text column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0BF34CFF-C3BC-4275-8EF9-CCE1DC3433F6}' />
    </worksheet>
    <worksheet name='WorldMap - New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='preprocess_data (2)' name='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)'>
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country Code:nk]' />
              <lod column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' />
              <color column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:New Cases:qk]' />
              <geometry column='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Latitude (generated)]</rows>
        <cols>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B4A7F1C7-901D-4690-959D-108F4CA2C032}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='35' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39EB2E22-44B1-4617-BC64-B308AAE1751E}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Box Plots'>
      <cards>
        <edge name='left'>
          <strip size='209'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[twk:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD6B778E-FAF0-4BD3-BA1A-29ABE6370378}' />
    </window>
    <window class='worksheet' name='COVID Cases Across Continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E1776F3-6F97-48D1-9FFE-7B725B2E5443}' />
    </window>
    <window class='worksheet' name='Stacked Area Chart by Continents'>
      <cards>
        <edge name='left'>
          <strip size='211'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Recovered:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB59B81-CDF4-4470-B19F-75D3926E2905}' />
    </window>
    <window class='worksheet' name='WorldMap - New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Country (group)]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_20266234772402176:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_20266234772430849:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_20266234773012482:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country Code:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:New Cases:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[dy:Date:ok]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[none:Calculation_1402308370372378633:qk]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[none:Calculation_289356312468230144:qk]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[none:Country Code:nk]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[none:Date:ok]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[tdy:Date:ok]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[tdy:Date:qk]</field>
            <field>[federated.1wmsxx91yipf1k1dsgvfm1m4ou6h].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0760631-6E94-40D8-BAC8-DBB3B1302957}' />
    </window>
    <window class='worksheet' name='SEAMap- Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Vietnam vs Others]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-05-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[Vietnam vs Others]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_397724180247695361:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_397724180247904258:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_397724180247949315:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[sum:Total Cases:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F68941F5-884A-4FB6-A43C-BA34CD9F9F1A}' />
    </window>
    <window class='worksheet' name='Pie - SEA Top 3 TotCase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Calculation_1560778784028012547:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-05-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[io:Country Set:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B35DA0A-DA93-46E7-A1C2-16FC4813BF62}' />
    </window>
    <window class='worksheet' name='Pie - SEA Top 3 TotCase/1M pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Top and Other (copy)_1560778784030695428:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-05-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[io:Country Set:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00EFDF24-6801-49FD-8CED-BF45EEA0BE1F}' />
    </window>
    <window class='worksheet' name='TreeMap - Test vs Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126652297224:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[io:Country Set:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country Code:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[tdy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126621638657:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126646198279:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[usr:Calculation_1050746126652297224:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A111E06-ECC3-42CE-BBEA-FE74788AEBA8}' />
    </window>
    <window class='worksheet' name='Linear Model for Test vs Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF301FD7-F7C7-45B1-B40D-115C1720D347}' />
    </window>
    <window class='worksheet' name='Line - SA TotCases/1M pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[dy:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[none:Date:ok]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{482DFBBE-756B-46F4-A876-40DBB9B17893}' />
    </window>
    <window class='worksheet' name='Europe Sum New Cases'>
      <cards>
        <edge name='left'>
          <strip size='169'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[usr:Calculation_445293450972991489:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{08DC8508-DE9F-4F6D-A956-84CA7407F8C1}' />
    </window>
    <window class='worksheet' name='Forecast of New Cases of Germany, France, Italy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='125'>
            <card pane-specification-id='6' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]&#10;[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37F65853-E017-443E-8AE8-55CD8D4FAAF7}' />
    </window>
    <window class='worksheet' maximized='true' name='New Deaths and Recovered cases in Germany, France and Italy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[:Measure Names]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Country:nk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[tdy:Date:qk]</field>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3713F6B-30B0-4CBD-9A42-36F821D4E028}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1836BD02-5D50-4D67-8F88-499912035004}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqhqk11fqzhlt1323ii20qnnhqv].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{797DCA31-5B34-41CB-93F8-B1A8348DCCA4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID Cases Across Continents' width='192'>
      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
      I/60veDg/y4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Europe Sum New Cases' width='192'>
      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
      nJrBa7Fztv8Y1VVVeDxPXjE0mUzyxZXLBHrbuTF8vywArxLpdBpRFPOdPOe4dai7G7/fT3dX
      9wtriyzLdPR35V8/bpaavH6Xj9/NFhgv7NxOpxO3203P4RO77isVOJ8TjkKntch6mEwqjd3p
      YGN6gaZANX/6P3yAxWJ56oVvVVUVf/JHP+Anf/czzhx/zSvEvO6srK5SV5t1LzAMgy+uX+Ph
      yAiVgQDuCh8Z00QTRdJOG/2NDS80iKa/u5dbsxNUtzzezWJ5coZ3z1+krbV1lyojSRLyHrp/
      buQv7Pyl3ktTVCKhMKGtGD/88CNqa2qeacGr6zrT09OMTU7gra1mIhQsL4JfBplMhut37vCz
      zz9FVVUgO/rPzs9Td2oAe1c79p5OfL1dVHZ34K2qfOFZJJqbmjha08zK2BRqZm/HtejaOq1u
      P50dHXt2SsEwGfnmJql4Ivt6e4QvtOzkjkN2MChcHFfWZ2u7SYZJVWXplCiapjE0NLRvqKmm
      aXx1/Ru8h9qpP9SJaLeWBeBFs7q6yn/4f/5vRtdX2Fxdy1uArl67RsbQcXq9uAOPdkrjqyF6
      PX7aD8jj82no6uri3ZNnSc8Gmb77oKhzpWJxQvNLVJoWTp84ue+IfKy3j+WJGUa+vgGwq+ND
      sYpVODOYpgkCdA4cAWnv9ZIkSbS3l84AncMwTVxeL6H5RWZvDtLqrCgLwItmemYGW3Mj80Mj
      XDhxErvdjq7rLAeDtJw4ng/cNnSDxGqI4zX1HO3re2nFvAOBAGdPnECPJpi8cZfVyVk2FoNE
      pxborqjmzImTe9rxc1RVVVHh8yKKj1S4XZ18m1IjuGmaJKMxutpKzzJ58+hjEg3YbTYOd3RC
      OMp75y8ycOx4eQ3wPMnlxHEUBH97PR4Wv/oSr91BV2cnqqZx7do1gktLGNUB6rs7SccTzD8Y
      4lBtA23NzS+9tKu/ws//+I/+McFgEKfTSSaTofps9RO3y+Px0Fhbh17hKplVrpBSi23TMBi5
      cp3jPX277lVVlWvXrzO3uIDb6eQH3/+jfddKmUyGS2+9RXVVNsdpWQCeI4lEoshsmUgkuHP3
      Loc6u/jo/fcxga3NTa49GKT7g3dgezS02Gyo6QzReIy1UIiV1VWqqqqwSBIWq5VEIkFLc/ML
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Forecast of New Cases of Germany, France, Italy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3Rc2X3n+XmhchWqgKpCIQMESBBMYOpmNzu3WlK7JVnSWJbkKMkey55Z
      e3xW9kpaWTsjjcNZ2+OZlTW2vBpPr6SxJctKDsrd6pzYbGYSRCZyKKAKldNLd/8Am2o22STY
      BFAgqj7n8BwQ9eq93yvU9917f/cXJCGEoEqVCkUutwFVqpSTqgCqVDRlE4BpmuW6dJUqlyib
      ACzLKtelq1S5RHUKVKWiqQqgSkVTFUCViqYqgCoVTVUAVSqaTS8AS1S9TVXemE0rACEEsVyO
      vz95nBOz0+U2p8oGRS23AWuBJQRn52f5p76zSBIIBAeaWsptVpUNyKYTQF7T+NFwP6fnZrlv
      SxeKJHNydhrdNLEpSrnNq7LB2DQCEEIwnUry1dPHcak2PrT/djrrgowuxXl+4gJ5XcOvuMpt
      ZpUNxqYQgG6aPD02wosTY+yONPIz3Tvw2O0ABN1uCrpOQdfxO6sCqHI5NykAg/4Tx0grQQ71
      bmXw5IvMpnR2H7iD6b6XWcxo7L/7TpKzaULeEktWgK0twdWxnOWnfqKQ51vnThPL53nH9p3s
      b2pBlX+6tvc5nDhVlaV8ngZfzapdu8rm4CYFoLKjdx99ozMgNObjBVo7u3CKIo5wGw/u8zI4
      MUtmYYkll4fbb+/CsiyEEAghMAzjTV9ZAKfmZ3l8ZJCQy81HD95BrcsFloXxmkA7Swj8ThfR
      bIbuYOjmbrfKpmMVp0AC1e7AqRY5e34Cf8gHWCBJ2OxOdL2IKQQ2Sbr0Duk1P98IRcPg+4N9
      9C1Euat9C/e2b8GhXP1WFEki7PGwkMu86etV2bzcpABKnHz5ZcZjKeweP5FaOyOjs7T37Cc7
      1cczExoH77mThC1NQ63F2ESU7i0NyJKEJEkob8IrI4TgqbERZjMZfuP2w7T6A9d9T8jjZSQe
      Q5Jl5KoIqrwGqVw5wbquY7PZ3tR7s6USSOC1O1Z0/MnZaX4w2M8n73/osvVBlSq3pBfI61jZ
      F/9V6r0+cloJzTBQL3qHqlSBTRwK8Vo8Njsum51YPlduU6psMCpCAG67DbfNRjSbKbcpVTYY
      FSEAu6LicziJV0eAKq+jIgQAEPF6Wchmy21GlQ1GxQgg7PGymMtSLYRX5bVUjADqvV6KhkFO
      08ptSpUNRMUIoNblRjMN0qViuU2psoGoGAEE3R4sIUgWCuU2pcoGomIEAMshEYv56kK4yk+p
      KAGE3R5iuaortMpPqSgBNPhqiOdzmNW6pFUuUlECCLrdpIpF9KoAqlzkJgVgMnr+JKcGxgEQ
      RoGnHnuCjFai/+QRnnjqWVKlPBMTUbLxWcbnlm7e4psg7PGyVMhTMvSy2lFl43CT0aAyLe1d
      jEwvIoRgbuICqHYK2Sy6s467DroZnZjFzOksRnPsOXjwso2o9S6R7rbZsCsq6WIR3wpDqats
      bm5SABIOx8XwYi3FyYFpnLJBNJZGtakoNgfCzJBcnEGuCaHIEkJYWJZVlv4AKhI1DgczqSQN
      Hu+6X7/KxuPmM8KOHGFwNo7dcZgDB3qZHBqgJuBjfuAUT48a7L7zDhThob6mxPD4PD1bGlBl
      GSHEm06IebOoqkrA5SJZKq77tatsTG7JjLCb4bsDfSTyeT504PZ1v3aVjUdFeYEAQm43C7lq
      XkCVZSpOALUuDzlNo3QTJVmqbB4qTgB1LhcSUjU5pgpQgQLwO11IklQNiqsCVKAAHKpKrctV
      TZCvAlSgAICqAKpcoiIF0OCrIZrJYFXTIyueihRA0O0hq5WqnqAqlSmA0EUBFKtBcRVPRQqg
      zu1GCEgXq/nBlU5FCkCVZfzOaqGsKhUrAIVal5u5TLrcplQpMxUpAFmSqHW5SRarm2GVzk0K
      wCI6OczAhVmEEEwOnuaZZ18gni0xOXSG54+coGgUmZ9fophZYnYxuTpWrwL11VKJVbjpfACB
      6vBiFvIAeMMtHAonOX9hFgmVPZ0uRieiUBQsTC+wZc/BVTB5daj3eIldTJBXqk0zKpabFIBC
      MFjLfDKPBKiiyPC8xfa2INNLEu6aGkRsjvkLY9jrO/DYFUzTvJQRppWxTKFbVVFlmYV0iqDb
      UzY7qpSXmxSAzsToKNNTUYKhIOdfOUVjRxc53SA1N82ZBZO6zp00Ci9+R4bxuQRbmmpRFKVs
      CTGvUgs4VRtLpRKNgdqy2VGlvNx0Ury3NsRefxC308HeAwfRLXB7fOzd10u2JAjW+dD8Aew2
      iYJmro7Vq4Dbbsdls7FUqLpCK5mbnwLVR376X89rO7E7cF6cWTgcy3Nst3NjtSSLeH0sVivF
      VTQVvfoLuT0sVNsmVTQVLYCw10u6VKSoV2OCKpWKFkDI7aGg6+T0atOMSqWiBRDx+ijoOqlq
      UFzFUtECUGSZgMtFqhoSUbFUtAAkoM7lqYZEVDCVLQBJosHnI5rLVLtHVigVLQBYXggnCgXM
      qgAqkooXQL3XSyyXrXaNqVAqXgA1DieWEOS0UrlNWXNSxQKGtXHCUTYCFS8At82O1+7Y9CER
      eU3jr488zzfPnkarVsO4RMULwGWz4XM4mM9u7vTIaDZDXtMZXYrxtTMnKFR3v4FVEEB2aY7x
      2RggSMyNcfT0AKYliM2McuzMEBY6iUQWo5RnMbHxvmSKLFPrchPf5CPAXCZNndvNR287TCyX
      42unj5Mpbf5p3/W4SQEYJJJ5sukUQhgMji3QFdA4OzzDhfksbf4iAxMLzM7GGOnvQ7a7rn/K
      MhDxeolu8r2AxVyWeo+XiM/HR28/TE7TePTYkYovEnyT8ckqrW3NpEdnQBTx+MIE2/yMPD9H
      oMVPbYOfhdGZ5YywSBc9HtuGyQh7LQGHk0QhT6FY3JTpkUIIJpIJdtVH0DQNlyzzi7v38Z3+
      s3zp+Mt8cPdeQhWaFXeTArDIZbPk8zmKuo1ceo7poQTupiaSi7PMajFUXzONnT4cIsbsUp7G
      OveGyAh7LZGaGkwhKAqLWruz3OasOtlSiZym0Rqow25fbmoYttv50IFDfPPsKb586hgf2n87
      Lf5AmS1df1bwuDOZnpqm/9jz9E/GXveawczUDIowiKVK7OzuICUF2bmlge3t9eTkMN2tYVpb
      w3Ru341D2pjeh1qXG8MyN+10IFEskNM0Gn2+y37vstn4YO9+Omrr+PLxo4wtxctkYflYwQiQ
      4OnHXsC0LWEb19nR9uBrXrPTvWfva/7vZ1d4+adApJXAxWSxmprlywRrN2ZvXq/dgVO1Ec/n
      2FIXLLc5q85iNoPP4cBzld7IDlXl/bv38f3B8/zdyWN8YM8+tofrkSSpDJauPysQQJCGmiy2
      5n3gCK29RWUi5PGwtAlHACEEM+kUTTV+3ugrbVMU3r1jF167na+dOcG7e3ZzoLkFuQJEsAIB
      5JiYWyDsa0crGXBw29pbVQbqPT7mM2mEEJvq6SeEYDaTpqO27pr3JUsyD3ZuwyYrfG+wD0tY
      HGptX0dLy8MK1gA2fB4HfUdfRq2tW3uLykTI4yFdKmJsspggw7KIZjI0+mque6wiy9y7pYt3
      bt/J9wf7eWx4YNN9Hq9nBSOAwm33v4vIUB/+5s07BQp7PCSLBTTTxKYo5TZn1UgUChRNg4jH
      d/2DWa6bentLGy6bjX/qO0OyWOTdO3bjVDdWRY/VYgUjQJLnn3qF8aVF+k+eX3uLykTI7SWv
      aRQ2WX5wLJ/D73DiddyYA2JXfQMfOXgHY0tx/v7kK5s2bXQFAgiyb08Td97xIL37t6+9RWXC
      oap4HZsvKG4mnaLW5cJ1g3sukiTR6g/wW3fchWaa/I+jLzKbTq2RleVjBQLQGTp/mu99518Y
      nt28fmKHquB3ujZd04y5TIrmGv+b9ugEnC4+fOAQjb4aHj12hNF4bFNlz61gYpclb3lpbnWS
      jyXW3qIyocoKAaeLE7PTGJaJz+HE53DgtTuwKwp2VcUmKzhU9ZZxDxqWyWw6TW9D002dx2O3
      84t7D/D4yCBfPnGUR7p3cLitY1N4y64pAGFoLKYk3vGedzM5cAIr3LVedpWFezq28OzYKOcX
      ouR1nZxWoqDr2BQFp2rDoSq4VDtuu42A08Wehia2BjeuYyBRKKBb5oo8QNdDkWXevq0Hn8PJ
      j4YGyGoaD3Vtu+Vjp64pgMT8EGenFN5yeAdBXy/feuwCt/U0r5dt6057oI5f2VeLJcSlf4Zl
      LdcOKhXIljQShTw5TWMuk+Y7faf53cP34dwgMU2vJ5bLgoA6l3tVzidLEne1dRBye/jWudMs
      5DK8b9feG15fbCSuKQCvP8z0j7/LU9oi6bkR/FsfWCezyockSSiSxKuOUAfLU4CQ5/JoyXSx
      yOdefIaZdIquDToKzKTThL1e7KvowpQkie3hej584Ha+cfYkXzlxlA/07l81ka03krjmikZQ
      yKaILi5hd/uJhOtQ5NWZ922kaNA3gxCCb547hSXgg3v2bbj5sGVZ/P2p4/idTt6zc8+aXCNV
      LPLM2AiTyQT3beliT6Rxw30O1+M6EzgJl9dObG6RoqZzrbW/EIKhMy/zzLMvEMsUGe07wTPP
      v0xOLzAzEyOfXGAqunkW0ZIkcVtzK4OLC6RKG89HXjQNZtIp2gNrt3vvdzp5947d3NPeyTfO
      nuJcdH7NrrVWrGAF46Ah4uOpbz/Ko//03BsfJnTiWYnbdoSZHJ8nLdwc3FHP+MQ8yWSGoaFx
      gnX+1bN8A9AWqMOhKgzHFsttyhXkNI2MVlqXGP/exiYe2NLFv/afJXqLlZtfkRv0H7/0Vboe
      fBd37tv1xodJEk6pyCt90zQ2d2PJDhyeGqzoPNGLPcIcqrwhM8Juhp3hCGfmZtgTjmwo92g0
      lcJnd2CDdfmc72ntYCGX5cvHX+bf3Xb4llkYr0AAbh58+EGOHH+WJ0oyv/yOO97gOJ1sTsft
      VSgYJqXYBEemDNr37EcWXoKePKNTi2xrC2+4jLCbobexmf914hVKQuC/wXCDtWQmmyHk8eBz
      uZDXyVX5sz27+cqJo3xn4By/tPcgjlsgfmgFFgr89W28/0O34fW8cd6ohIs7772bkmHhdruw
      9AY0U+ByOTD9ARRFImhuvsjCBp8Ph6oyuhTjQFNLuc25RDS7HAG6Xl9+AJ/Dwfv37ON/vvIS
      Px4e4J3bd274fYIVWGfwzI++yfNHjvL9x46+8WGShM3hxOtxI0sSqt2B2+VEQkJVFSRJxqaq
      b5iUcaviVG10h+o5MzdbblMuYV1MglmNDbAbJeL18b5dezkxM82J2el1v/6NsgIBSCgK9L9y
      FMOxMcualJsd9fVcWIqT3yCRpKmLYd0R78pCoFeb7eF63rq1mx8O9jOeWCqLDSvlmgLIp2b4
      9le/g+RrwO60Y9/4U7qy0FwTwGlTGViIltsUYHn6o14s+FUOJEnino5O9jY28Y2zp5Z3pDco
      1xSA01vPW9/xMB31tfiD9WxpbVwvu24pfA4Hrf7AhvGDz6ZTuO12PBdLoJSLh7t34Hc4+Ycz
      J9HMjVmU99ojQHKCz//pnzOclNm5oxuXbbPN4FeP/Y0tTKYSZW+3JIRgPpuhpab8ey5OVeWD
      vfspGQbfOntqQ6ZXXlMAdk+Y93zwF9i/vQ2Xy4lN3TypgqtNVzCEblqMJ8q7261bFgvZLE0b
      QAAAAZeLX+jdz3B8kRcnxjZcLsE1Z/V2p5/eAwfWy5ZbGqeq0h0Kc3Z+lt6G8sXEFHSNTKlI
      8wYRAEBzjZ/37NjDP50/Q73XS084Um6TLrGxnbS3EJIksSvSwFBssazz3WSxQMkwCXu8ZbPh
      9UiSRG9jE/e0d/Ktc6c3VGrlLScAIQT6yBMYM8c33HDaUVuHXVEYjC2UzYbZiyHQjg1W2UKW
      JB7s2kajr4bHhgc3TEuqW04AkiRhxUcp/uhTiGKy3OZcRsDpor22jvML5fMGzaRT1Hu8G3IH
      VpVlHunewXB8kbnMxugVsfE+pRVg630/kt2L9tJfl9uUK9gVaWAikaBolKcDy0wqSas/sGHj
      8iNeH1uDIV6YGCu3KcAtKgDJ6cdx3++jD/4QY/KlcptzGT2hegq6zkQZvEG6abKYy5VtB3gl
      KLLMXW1b6F+IsrABQqdvOQEIIdDiT2L5wLbtbZSe+xxC2zilTNx2O1vqggzGFtZ9jTKfTaPI
      MgHXxg5Z6QqGCHk8G2IUWD0BCEF6cYrnn3uBpbzB/PgALx07h25pxGIp9EKaaHx1Vv/CyJAb
      /zxK78OIYhLtxN+tynlXi1e9QSVzffshzGcyeO12/M6NLQBVlrmno5Nz0fmy92RYNQEILPoG
      J7j98CE8Vp6phE5Pk8zQRJRoNMFQ/wCOVWjDI0kSjvp3Yqs5QH7hq9hu/xW041/GjPatwl2s
      Dt3BMNlSidn0+i70plJJ6txu7BvMA3Q1dtU34LbbOFnmiNHVC28TBZKLMV589mnCjd3UBHx4
      g37ExR5htkgnu1zqqmWE2Zo/ijHyaYr2cdTGXgrP/Bfs7/o8qOVvceSQJNoCAU7PTtOyTvNx
      Swjm0im21oVumUy7Q02tPDcxxu1NLWUT7SrWy/DQ0BwhGKllIZ4jl0ozmp7FEe6isdOHR0kw
      uZimNVyzShlhdShdnyQz8CnYeRCe+S6c/za2gx/ZEB6QfY0tPD4yyDsVGbuy9mG0RV0nq2k0
      BwKX+oBtdPY1t/LC1DhnF6Mcbusoiw2rNgWSJNixowfNcLJnbw+7tnfiDHbR1RSioyNC29ad
      +J2rq3LV3YG7/bfQckeQeg5SeuVRRGpqVa/xZukKBtFMg5nU+ux6LhXyZErFaybBC2NjVa/w
      ORzsa2zm5akJtHVeL73KKnqBJJy+WrZ2deBQZLy19XS0RJBR8HicyKodv8+z6hlh9rr7cYR/
      Bs0zBX4/pWf/AmGVvxmf3+mi0efn3DptisXzeeyqit9x9SmglV8i/w+/iHbmmxtqB/3u9k6W
      8nkGF8uze37LuUFfjyRJuJp/FcW7DbPdhTHxHMbAD8ptFgA76yMMLS6sy6bYdCpJs++NA+DM
      uVNYsRFKz/0FVvTsmtuzUrx2OweaW3hpcrws4RG3vAAAJMWBZ8vvgq8Os8lF6fnPYWXKn5zS
      HQqzVMgzn1nbDR9LCOaz6WuGQJszJ5Hre1DaD1F87D9h5coXr/RaJEniztZ2ptMpplPrH9qy
      KQQAoDga8Hb+PqKlHlNOUnrh82WfCgVcblr8AfrWOFPMME3mMxmaamqu6gAQRhFz+mXUzgdw
      vvWPQHVQfPwPsLSNEY9T7/XRHQzz9NgI1jpPzzaNAABU73ZcW34Ta0sdxvCPMMdfKK89skx3
      KMy56NyaXiena+Q0jfo3cLla6XGs5BhK823IzgDOt34Wc7aPwkt/jDBLa2rbSpAlicNtHYwu
      xdc9VHpTCQDAEXo79q6fw2xwUnz6T7Hy5e1qs7O+gZymMbWGw/tcJo3TpuKxXen+FEKgzz4H
      hoUS2QGAHO7B+cCnsM78hELfXyGs8gTuvZbOuiAtNX6OTI2v6yJ90wlAklVcLb+K3H07ljaH
      9sr/XNH7hBBYegphre4mUtjjJeL1cW5+7UaBuXSaoNtz9UZ4wsSYeB6lYTfYl5NkJElC7XkH
      6vZ3Ybz4NQqjX0aI8sbnS5LEvR1d9EXnSaxjXvWmLHQiqz483f8H2dgU+pl/RInsQe24B6Eq
      YJWwtEXMUhSzMImlx7CKs1haDGEWkGQbttq7sdfdi+rZhiTfXPlGVZbZWR/h1NwMb9+2fU3i
      9BfzOeo93qvWJrVKC5jRPmzdvwKvcUJLsorzwU9hxYfRX/hbZF8TjsgjSFL5noldwSB1Lg/H
      pid5+7aedbnmphQAgOJqxXXwDyhkPknh8f8TWa3BqvNh+jSEV0H2tyHbg8i2OlTfHhRHA7Ij
      glmcQVt6jszgj1E927DX3oW97l5k+5svM74r0shTYyMs5rI0rHK1NksIJpNLPLBl61Vf12LP
      IGU0lLY7r1ggSzYXzrf/MYVv/wbFl/4C6R479tBDZROBXVE51NrG4yOD3N3euS5lXTatAABs
      /oNw73/GiJ9BKTixomNIo08izBxyrRvbtjuwbXs7kr8FJBlJkrDV9OIIvRWrNE9p8TEKs1+n
      MPdNbP592OvuXz4n0g2FW4Q9HmocDi4sxVddAJlSkZJhXnUBLISJMfk0kr0G2d961fcrwS4c
      D/4B1o8+TuHM55Bvj2Cr6V1VG2+E3ZEGnhkb4eTsNPd0dK759ZTPfvazn13zq1wFy7JQ1jgA
      SpIkFHcbtuDtqA37sXW9BfvBD6M2HwJDwxx/Hu3o32IM/RhraQxsTiS7F8nmRrb5sfkP4Gx4
      L4qzCSM7SCn6z8u5CPoSsj2CpLhX9LSUJIlEocDoUox9jc2rWkZ9KpnkzPwcb9+6/YoO95a2
      QOnUl1Adrdj2/RKSfPXPWwl2IQoprP4XKClnUWt7UezhVbPxRrArKqYlODI1wYGmlivuabXZ
      1CPA1ZBkFbXlNtSW2xCmhrV0AXPyZfTRJ9HPfgvJF0FtvRO160GUltuQbC7stXdhC9yJVZpH
      Tx2jGP0upej3UTzbsPl2onp3oni2IqtvHPnZWRfkpclxSoaBexWH9mg2Q8DpvOo5jcw5pHgc
      eetDSMq11zKOw7+NFRtCDJwi5/pzfD1/hOIqT7Xrg82tPHlhmKHYAnsb17YpY8UJ4LVIih0l
      3IMS7sG2/5cRhQTm9DGMoR9T/MlnwLJQt9yL2v0wSsMeZEcjjvqfxRF+BDM/hpZ4Hi3xIsXo
      90AYKK421Jp92Hy7UdwdSIoPSV7+iFsDAbwOO5OpxKrVxRFCMJtOXXVaJYSJHn0eSiZq++Hr
      fxYOL863fgbrGx/GGB0ko/whno7fRnG1Ian+dV0XuG02DrW08ezYBfY0NCKv4bVXWQAWs5Mz
      hJqbKSzNMZcy6d7aRC6j4XbIZEomAd/NJ8WsBZKsInnCyNsfwbb9EaxCEnPyJYyRJyj+6FNg
      c6O23Ymy5T6U5gOo3m5Ubzei5dcQehwjP4aROYuRPkUp+l2QZBRXK6qnB9W3C7dvN+2BOs7M
      za6aAHTLYj6bYW/jlY2whZ7EmD+Bgh25fueKzicH2nA+9BkKP/g9rGCSrP7HIKmo3u2o3h5U
      324UV/s1R7rVQJIkDja38vLUBCPxGN2h+jW71ioKQJCNz/LyK6e4L+BjZGyWeh8MT9sxUiUc
      Io6vdWV/iI2A7Aogb38Etfvh5ZFh9hTG8OOUnvjD5dcju7F1P4xctwW5dgs2317sgdsRlo4w
      s5iFSfT0aYxsP6XYY0iKh632d/N41ENR11elt3BR10kU8jReJQhOz/RBfBE50IHsWXkbV2XL
      vdj2/hJ6/7/geuD3oC6Inu+nFHuK4ty3QbajuNqw1x5G9e5AcbaA7Fj1EaLe42VHfYSnL4yy
      LRhesxyPVROAECbjUzG2dbZgaCaBcJiWJj+DFzPC7A1d3Od33po9wlQftN2L0nYvspbFnHwZ
      LjyB9sqjWJlZQEKu60QOdUOgA2q3IPlbUevei1r/Cwgzjxb9BsHotyiW3sdYPEZXXfCmzRpf
      iqFIMvUu9xWfZSn2HFJGQ9p66IY/Z/ngR1FMg9JP/gzJ5kTpeQ/Otl+HQD1GcQyR76cU+wn5
      qS8jKe7l/RJbaFkIshtkG0gOUNwgKUiyB2Q7SCqSpCKpNcj2IFwnOH5fpImvnz3FfCpF0L02
      pd5XbwQoJJmeXyATXyCnOJEMnbSaQXLX0djpRdIWiGVKhHyOW7tHmL0Odj6C2PEzoOcQuThW
      enZ5MT1/Fmvwu1ixEXD4kNy1yP5WlMZ9uFoO0tzVRfj0ONOLZ+mpfwBJvrnF8OnoPN2hMH63
      +7InpGXkMRMnUHIatuYD2G500W23Y7v/44j9v4QxeQRj6EcYp/4eubYNW+eDqNsfQe74TSwt
      hlkYQ0+fRugJhFbCMnMIoS1vOBo5ECbCzIHQQVIBGUn1INtDqN4dF//1oDgarjBjaziMqshM
      ZFI0Btam2+V1GmXfOMn4Iq5AkPTsKGNLFrft7SS5VCTgVYmmCjSE65C49RtlXwthFLESk1jx
      YcyFfqxoH+biAOqW+zna+m6Oz/XzkZZJ/J2/jeJ4c/PbVLHAXzz3FL+87+AVa4pS7CnyJ/4I
      daSI50P/guy9eZemlV9aFsLgjzBjQ8jeCOq2t6F2P4wcaEdSry0yISywigiziFmaxUifw8j2
      YRamsIwUkuLC5tuD4ulG9XSjOJuQbLV8d+A8s+kUH7398Jrsoq+6AFbKZhbA6xFCYM4cp/Tk
      n5ApZPlu6O081DFB0G7g2fIxVO/2Gz7nixNjPDd+gd+9674rWpLmxv4S/djXsVvbcL3vb5HU
      1eteKSwTKz6KMfwYxsgTWMkJ5PB21I57UNvvRq7vQbqBwgSWkcUqRTELYxiZPoz8Bcz8BSS1
      BsXZTNR2O1+54OL37nkLdWswDaoKYB0RpSylI39D/sw3sXp+BkeLhFEYxLPlY9gCt694IWlY
      Fo8eO8KW2iBv33a5eCwjQ7rvY0hHT+Do/kWc9398LW5lOWLT1LDiIxjDj2OMPYvIxQCB0noH
      SuNelPa7kL0RsHtWtIgVQoAwEGYOszCOkR0gO/99vhq/nwNb7+e+LdtW/T6qAlhnhLAYPvJV
      3Me/SG1dE2L7VnSGcTa+H2fj+5Ck6+98TiSX+NujL/Ef7rrvijKIevosmXOfRD0+i/udn0Pt
      fGBtbuR1CCEQ6VnMuVOYMycwZ45hJaeRappQW29HaTqA0tiL5G+9IY+OWZzhsfMvMpq2+I29
      7TgCh1bV41TRG2HlQJJk2PYwX1uS+bXCcziPPIG6bQdF8U0sLYqr9d8iK2881AshODs/R4Ov
      htBVCo3pyZeRshqS6kYOrf4T842QJAnJ34zsb0bd/g7Q81iZeczJlzBnT1N65s+Wj3OHUNru
      RAl1I9dvRw60g2IHWb2qMBRnM3u63srLR59hcvCLNEeO4mr9tVXbi6gKoAy0BfqzD+AAABRk
      SURBVGoxPRHm9v9f7Egco/TcX6DGvZTy38UsTOPp/NhVvSIAphD0Red5sHPrFYtCIUy0xEvI
      WRk50I5cs7ZhBG+EJElg96AEu1CCXbD/VxB6ESs2hDH+PFZsEG3iRaxsFCxj2YUc7EIJ9yBH
      diF765F8jZfCN1r8tdR56hiw/SyR7ONk+j+OZ8vHUDzdN70/UBVAGXCqNhp8PvoWF+jd+17k
      0FaKT/3fqGfPYXYeIaN9Gl/Pn6I4rvTeXFiKUTIMtgavfM3Mj2HpS9iyBuqW29bjVlaMZHOi
      NPaiNC5Hmgotj8jHsNJzWLFBzMUh9P7vYb34eVAcyDWNyP421M77UXvewe5II6fnLN62848x
      Zx8lM/QfcTZ+EGfk3TeVs1EVQJnobWjiqQsjy7vCkd24f/5LaMceRTv+Jcx0Hxk+ja/nDy8b
      CYQQHJ2aZEtdkNqrVIDWlp5H1m2QzSE3HVzP27lhJLsbyd6GHGiDtjsuLoAtsHSspTHM+TNY
      8QuUnvuv6P3/yo49H+aJXJaFokRb5++jxZ4kP/X/oaeOLY8GN+BOThULPD8xRl7TNl9K5K1C
      dyhMspC/1ClFUu3Y7/gtXO/6HEocxMwguQv/DWH+ND0wVSoyllhif2PzFUO/sDT05MsoNIBl
      XXrS3ipIkoQkK0iqE6V+B/beD+J88FO4PvC/kHyNuB//BG9Z+AEjs6NIkoIj/DZqdvwZCEGm
      /xOU4s8ixMp6s/1wqJ+hi4W4qgIoE26bnRZ/4LI+ApIko7bfhb33F1BnTaz8ItnRP1/eUQWG
      Y4sossTOyJXrAzN/AbM0h5JVkUPdSI6N0yTvZlDqtuB82x/ieed/4ZB2gb0vfhp95EmEqaO4
      2vB1fwZ76EFyY39JfvJvryuC2XSKwcUFfnbHLt6/Z19VAOVCkWW2BsNX7S5vP/gRJOHEUdiG
      kRsmP/lFDFPj9Nwse98goUbP9iPb6xHxBZTmA0jKrVEgdyVIsoK65T6UD/wdfb49pL7/CYo/
      +ARWchJJceFq/hDebZ9Giz9DcfYbbygCwzJ5emyE9kAdnXXLAYJVAZSR7lCYRCFPpvS62jxO
      P/bbPoJ57od4W34HPXWcqZEvMZaIs6v+yqe/EAZ68ii2moNY0T7U5o09/3+zuH1hxrZ9gCP7
      P4mVnSf/jx9abo5ilrD7D+Dt+jjF+X+iOP8vV61yMZ1KMhRb5MHOrZceIlUBlJFGXw1Bt4f+
      xehlv5ckCduuf4NU04R57im8XZ/kzEKKZo9Kk+/KqY2lxTFyQyhZG9g9yMGrJ8hvBvY2NtMn
      6pB+7lHsd/0HtONfJv/1X8acPY1asw93229QmPl7tKXnLnufJQRPjA6zPVRP62sC66oCKCM2
      RaHFH7hq5TjJ7sFxx2+hn/9XrLzCKPvpFs8hEs9ccayePIbiaIREHLm2HcnXuB7ml4WecISC
      oTOTyWHf8z7cH/gKcqib/Hc+ivbSX2MPvRV3y6+SH/8rtOTRS+8bT8SZTCa4p6PzsgyzVe0R
      VspniMWXMCxBKZ9lKZlBYKFpOpZpUNLKX4Fso9Hb0MhsOkWikL/iNaXzAZSGXUw9+d/IlXR2
      td1BbuJvKMWeurRwFkKgJV5A9e7CnDmF0rT/DZPfNwNOVWVrMMSpuRmEEMj+Fpxv/2Oc7/hz
      tNP/iH7uOzgi78Eeehu5C/8PRm4Y3TR5cnSEHeEILa8rILyKPcLgwvAAMxP99A/PcurkSUb6
      jjGxuMTw8CwzF/qZT5a3IdpGpLM2iGFZV+0nJkky9jv/PaH4Ge6wp2hofSfOhp8jP/EFjMwZ
      gOWY/PwFVKUFkZpGbTm03rewrkiSRG+kiTPzsxSN5eLHkqxg63wAxx2/hfbiX2EtjeNu/TXs
      tXeRHf4T+qeOM5aI89DWK3eOV3UjbPuuXi4M9WP32LDZWulqqmHgwhzRC2MkGru4e2vNrZkR
      tsZ01QYZXIyyrfbK4ls5/zYmgwc5PPM99NJ7UcM/j6FnyY78Ga6uT2MVJgEJq2BHlDKY4V1Y
      m/xzbfL6cCgqffOz9EZeM93b+fMw+gzFn3wG289+AbXxwxQL8zwzcoa99Xvx2+xXfOdWVQDD
      g/1EOnbilYqcGY1RyBjIDg+NnbvRc3NkSgY1TvXWzghbAzqDIZ4fv4Do2YVDvfxPcnphniO1
      99I+9jdIoz/Gtuu92Np/jZyVpTj2Z0iKB1vgNqSZc8jBLuzeug3RI20tCdntbA2F6Vtc4LbW
      9steU9/2n8h/+zcQJx7Fcc//zlDtR4lNvcI75R+gyjuQ1cudCKu4CDaIz0c59cqLTCZ1gnad
      M6NpOtsbqKurYeeuHhJLSTZOc56NQ3eonryus5DLXvZ7IQQnZ6dpaduDs/fn0Y5/GVFMIcmO
      5ZIl7k7Mwji2mtuW3Z+td5bpDtaf3ZEGJpNLV/QZlgNtOO77ONrpr6NNHOGZ8Sn2NkSoFVPk
      xv7yiuLHq9gkz8ZdDz3MAw88QGdTkPbte7nnzgO4VCeNjXXYPbW0N4VWvUfYZqDO7aaxpobB
      17lDE4U8U6kkvQ1N2A9+BGGU0M99GwBJceHt+gTerZ/G5tmNOXcGpeXgpn/6v8qOcARJkhiO
      L17xmm3b27Dv+2UWv/dxzMwcD2y7jZqeP8HMDZMb+++X9USoukE3AKossyMcYTB2+R/zbHSO
      kNtDe20dsiuA49BvUnrl0UvtnyTFjb3uHqyFQVAdy1UpKgRFltnX2My56NxVe4tJ+38VyRXk
      A8mfUOu0ozgieLo+jp58icLc1y8dVxXABqEtUMtiNks0u9xPrGQYnJydYW9jM+rFuH91+yPI
      gTa0I1+4bKfTnD6GEuxC8pSnnme52NPQxEQiQbp0ZfvX00tp/rnh3+CKnUc/9Q8IYaF6d+Ld
      +geUFn5AbuKLFBd+WBXARqHFH8BlszGeWAJgKpUgls+x+zWBb5LNiePw76APP461OHDp98bk
      S8iR3det/7nZiHi91DgdV7RYLeo6z46N0t19GPd9H6N05AtY82eXd9j9B/B0/A5GdoBS9Lvl
      F8Djjz/Oj3/8Y6amVr/BtRCCZ599lsnJyVU/92pjVxS2BkOMxmNYQnAuOk93MEzwdWmPSvth
      lKYDlF76AsIysHIxRHoGtXVz+/+vhlO10ROOcGJ2+rKNwROz0xiWxeG2Dmw73o3afjfFJ/4I
      UVoeXW2191Cz40+p2flfy58Q43A4iEQieDweRkZGqKurwzAMpqenURQFSZKIRqPs37+f8+fP
      UywWOXz4MIODg2iaxs6dOzlx4gThcJiamhpGR0cJBALs37+fUqmE1+slGo3idDpxOBykUilk
      WWZwcJCenh4ymQypVIr6+nqGh4fp7e0lHo8zNTXFrl27SKVSxONxDh06hOsqSSiryZ6GRr55
      9jSJQp7zC/M80r3jyqYWkozj8G+T/9avY068CEgI01hx/c/Nxq76Bl6emmQ+m6HRV0NWK/HC
      xBh3tW+51GDD8eCnKHzr1ym9+Fc47v/E8k65tFwqpuwjgKIo2O12ZFkmFouRz+fJZrNks1l6
      enpIp9McPnyY4eFhAoEABw8e5OTJk4yMjJBIJFhYWEDTNAYGBkgmkxw6dAhZlhFCMDU1xcjI
      CENDQ7hcLgYHB0kkEpw6dQpN04hGo8Tjcfbs2UMqlULXdc6fP0+pVOKOO+5gZmaGc+fOkc1m
      SaXWvnthc40fzTT4weB5LCHofIPyiXK4B1v3z1A68jcYk0eQ/S3I3rUrILuRafYH8Dud9C9E
      L7qNZ9BNk9uaf9oQRHYHcTz0GfS+72CM/OSy95ddAMVikaGhIdLpNOl0mmPHjiHLMpFIBPtF
      BT/99NM0NTUxPDzMSy+9xK5du6ipqcH9mpKANTU1uFwuHA7HpSe1pmm8613v4u6776ZQKGCa
      JuFwmI6ODoQQuN1ugsEgbrcb0zSx2+14vV5SqRTPPvssLpeLUCiEw+G4ZMta4lRtdNYFORed
      Z3uonhrH1QtMSbKM/fD/hkhNo5/++orKn29WVFlmV6SBc9E50qUiT14Y5oHOrThft6GoNh/A
      fug3KT35J8vNUC5yy9QFMgyD+fl5WlrWtmmDZVmcOHGCRCLBnXfeic+3tqXAX8+RqXH+ue8c
      v3no8BuOAK9SevmLaC/+d5zv/jy2rresk4Ubj7l0mr8+8hzbw/UsZLP8+zvuvmrDEKEXKHzv
      Y2BouH7u/0VS7OUTgKZpjI2NXf/ACqNo6JxfiLK/qeX6m4Z6HmPkCdRtb4MbKEe42bCE4Jtn
      TzGVSvLQ1m72X6OrjJWcpPjYf0Td+tBy5Gw5BbC0tFSOS1fZhPQvRDk5N8MH9+y7bhFdc/oY
      paP/A7T8rTMFqlLlWlhCYFrWiprqCSFAy4FlVAVQpbJZIy+QID5zgeNnh7HQSSSyGKU8sURm
      bS5XpcqbZE02wsxiltG5NO0hiYGJRURWQzFihLturWJNVTY/ayIAQ7fwBwPUNfpZfLVHWKSL
      Hq/9UkaYaZoUi0WEEBiGgSzLlzXO1nUdSZJQX+PPNQwDIcRlU6dXz6eqP60u/Or5FUVBvrgg
      ql5n81xH15dzy197nTdzbUVR1kYAql0hGYszb8RRfU00dvqwW4vMJfI01Lov3aDTWbmuuyob
      gzURgOLw0N0WZiZpsbM1TCZVwueOsJTZ3LmqVW49ql6gKhVN2WOBqlQpJ1UBVKloqgKoUtFU
      BVCloilrRtir/twqVcpF2QTw+s2Na2EYRtmPNU0TSZIubdxYloUQ4rJNm1e51mvrafPNHHst
      L51hGJfSVa+HdbFkiXydCE1Y3gyzLGvVP7fX2/BqaU5VVcvnBr3VudEv+a3GZnZTVwWwCvy0
      r9fmrMQmhNjU9wYXG/NVBVClkqloL1A2Os6TTz/Nqf5xXq2zppdKl37OxBfIG9c+h6mXOHP6
      DLoQZOOTnBuaucbRgvnxfp578Tg57Tonvh6iwMxMHDO3xPkL04hSlvml7BWHLSwsXOXNVyeR
      iKFp12k1Wspw7MwAQggysSnOjbzx/QrLYm68n7G5JFgm0clhRqfjK7bnMiyDvrOnyWsmej7F
      iTP9WNd6dFs6C4vXzjgUllnZAsjHcux54AH27eggl04yMzPD3NQ0JWEyOzHK+b4BcqUCwwP9
      zC6mSKfTCASZTIZXx01LN1mITpDMlJgdH2E+mSUdm+P8wDC5YolMNocwC2RyOmhLjMybHD60
      D5d6k2sHyUE0OsnCQoy5uRlSS3GKus7C9AXGpqNYpsHUhSFOnR+hVMoyOTrC+MwillFkdGiQ
      WCpPNhGlf2iUom4SnRrlVN8ApVKBC4P9TEWXyKfTGAIy6fRPq3rrORanp4lrgsmZKeIL8eXz
      9A+SzRdJZwtYhk42X0AIC5tdJp8tgWUieTwUUlc2AlkRwiC9uMBsPE1sfprpuQVMvcjo0ACL
      yRz5VJyR4UGiiRxGMcNg/zlGpxdJx+foHxgmXyqSTucRep5MYfnhIywL5bOf/exnb+4vceuS
      XZjk6PkhSobK9OBJXKFW0tE5ZJtBLGnilg2cXi9nTx1ndHKRkMsgZSpEF9PUBwNIEli6jlZK
      k9XtaMUMqs2LWopx6vRJckqIfHweI7eE6avHW5jj2Mg885Oj2Gob8LtvptSKRHJ+jqwQBG0K
      i7pOvVfmBz98nvGxKfx+mYThQTaLuG0l4imZzFKUTHKKE2cGmY5mKCYnSesOQvY8w3GBx2ZR
      W+Ph3InjnBiZpTPsJKFZzE0tEGm4WNlby1Ky2UlFl7BUFcmScIosJ86cI2nYKCRj2ESOtOUl
      4HXitsNiWlAf8uNxKywu5qivr73x2xUG6aJGMZtHK+nYbDJWapGSN8jU8DB6PgG+EAtzs6QX
      5/CFQhSLArUU48SJE+Ts9eQWpzGKWYQngMeuIiyrskcASXJxxwMPsGdrCzXhFrY0hZAlEAj0
      Uol8UWMpGiXStYOwz0Zd+zZGjh0lVB+mkEuhX5wt2HwRSjMncIY6kYCFRI69vT0IQxAJKPTN
      l2jwKOBvpDngoaXeT65483sg9QHBVFymtb2GsZEUPrdCY8d27r37EC5FQisVKJQ0UOw0NTUR
      8LqQVAc9ew5wsLeb9q4eRDrKXDyDppfIF0poiTnsTTuor3ERamxi/MRR/G0d5LNpDPPi4tER
      Jhe/gL8uiITFYjzLjt69KKZOR52No8MpGkMeLFNjenKK6NwMiXSWmckp5qNzJLNXFrNdEbIL
      h5lEs/uxSSArMsVcDgsZu8tLY2MjboeKECb5XAHdNIkuZdm/pwdhmjSHbAzM5ql1KmSyy83H
      K3oRrBcK4HJhAwqFAi6Xi0Iuh8PlIBaNIlQXdQEPC9FFnJ4a5NISZy4scffhA/SfOs723oPY
      JIuSrmOWiti9HrSiAXqOVEHH5/Uz2X8MtXEX21uW2x/l00ss5QwaI2EU+ea8LKZeIFuEGo+N
      ZDpPbaCGxOIcOV0hUl9LPBoFh4eg340k2TD0Eja7QnQuis0TwCVrJLI6DQ31pBbn0GQH9bU1
      LEYXUFxePCLLkf457r9rHwPnBti2ezcODAqGhNBzqC4velFDtorEMzoBv5v50TPk3Vvp3VqP
      ZerMz86iW+CvDZJPL6GbEAjV4/fcYC6IsCgUNVR0NNkNRhGnw8bCfBRXIIxLFagOJ1qxiIpB
      NJbCWxvEbuVJ5nR8/jomz7+MEumhzVNgIuWkpyNc2QK4UYRlIpCRZWllbsKLlQpkWb4lXYrC
      srDgUlPp69+DwDQ37v2apnnZhlzVDVql4qnoNUCVKlUBVKloqgKoUtGUvUFGlSpriVFK8q2v
      fRvJE+T+hx+mwf/TJidaLlEVQJXNjWnk0J3N/NxbOvnKd37Me+/t5PSFRXb1dPHiv36lKoAq
      lYEnuAUr/yTRWTuTg2dYLPm4a8+2qgCqbH6iEwN8/zsLbNl3mLOnn6W5o5U0EulSGatDV6my
      HgjLZCkWw1IcBOv8FLNpCoaFy+lBmMWqAKpUNlU3aJWK5v8HlRVcZzJJbm0AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Line - SA TotCases/1M pop' width='192'>
      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
      kERygvx/hfENhQOw+t4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Linear Model for Test vs Death' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Deaths and Recovered cases in Germany, France and Italy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie - SEA Top 3 TotCase' width='192'>
      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
      9YmLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie - SEA Top 3 TotCase/1M pop' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SEAMap- Total Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='116'>
      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
      QckoKBkFJfMPmHV3vA0TE58AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stacked Area Chart by Continents' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29V3BkWXrn9zvXZiYykXAFoFAw5X1Xd1e1nRlyONSSVCwZK+7GGkmhDb1I
      CoakkPZB7+KbGMEIRUj7pAhqRZGcHQ6HRsPd4XjT0zPd1dNdrstXAVXwLpHeXnPO0UOiXJdD
      IVGFBHB/EReZyMyb5+S953/Md77vHKG11kRE7FCMzc5ARMRmEgkgYkezaQKQUm5W0hER99k0
      ASilNivpiIj7RF2giB1NJICIHU0kgIgdjdXa6QEXPz5LvqE5ceZtshMXmc35vPvl95m+8hnL
      FcXb779BdqFOd6JOkTSj/emNyXlExAYgWpoIC4uc/WyK0V6DSqKX2kqRk/tjnLvhk+iy2ddr
      Mlvwqec8pPY5deYNbLF6ahhimuYG/YyIiPXRWgugDUzRYH4lID3ajWnamK6DbFSx7Rim7aBl
      jcLKAm7vAKYQaK1QSkVWoIi2oEUBKCqlElqHpHSMeu4aP/hxyKn3fo2pz88yfUvx+vtvQZCk
      N1llYmaFQ6N9WIaB1hrbtjfoZ0RErI/WukAtEARBJICITSeyAkXsaCIBROxoIgFE7GgiAUTs
      aCIBROxoIgFE7GgiAUTsaCIBROxoIgFE7GgiAUTsaCIBROxoIgFE7GgiAUTsaCIBROxoIgFE
      7GhaC4hpFPnlp5fwg4Cx428Rq81xZyXg3TOvsXjnKrMlwVtvHiS/4tEZlxQDm4Ge1AZlPSKi
      dTYgIEYzM34du2eImTuTHBmyGc8n0arOWLcmqzoISwrprbD/5Jsk3WYccBQQE9EOtLgqBKig
      Qa4Gx0YF2UQ3qcE43q0levd3k+xyySxkmLk9TmrsCB2OiZTyfkyw7/sb8RsiItZNyy3AytR1
      asm9DHeZ/Orjs3Q44A4dIzszQcIOSY8dorrskzCyWLsOMNyXQhC1ABHtQcsCqFerOB0dmGhq
      pTy5mmLPQC/VYpaSJ9g90EWjLnFtqPmKjkQsEkBE2xAFxUfsaCIzaMSOJhJAxI4mEkDEjiYS
      QMSOJhJAxI4mEkDEjiYSQMSOJhJAxI4mEkDEjiYSQMSOJhJAxI4mEkDEjiYSQMSOpuWAmFeF
      VpLwzs9AhYhEH8JJNB/tGBg2GCYYFkKI1tLRGrQEde8I0UEN3SiBYWD07EeIqN7YLrQsgHo5
      y+Rcjr0H9hGUMiyWFIf2DlFamSdTE+wf66dWCYk7mmog6OyIrS+hMKDxqx+iq9MISyFcF2FZ
      CDeJ0dEDVhwR60TE0g+ORC8ilgI7gbDjYDogAwgb6KABYR3dKKG9ErpRbD5vFJrvBXW0XwXp
      gwqbAtMK+7V/gTn6XstCi2gPWtwl0ufC+WvsO3IErQKu3bxLXwdcn7IoLS/QHQuZXDSoZ31s
      tUL32PH1J6UFQf0AyD0QBlCtAlUEFYSYQVgehr0qDMdG2C6YJsKwmoXXtEE0CzEqbB5aAaL5
      PqsFWojmweqjYQECLSXCtAiu/n8Y6T2IrtGWLl3Eq6MZ8qJBaxDGI5VXawLwsuTLPsGtWxw6
      fpBU9x4OHk3w8QcL9O4fZLQ3xt35ZWZujdO59yiHO2PrjgnWvo9SAq1twAYzAex68AEFNCRU
      KwhVRegiQlQxbImwFcIxELYBSoMWaKVAalAarcTqawIUaCXQykBrAzABBy1sBBXcIU3j03+H
      +e5/j4h1tXT5dhwyQNeyzZbYtBCmA5bL/cqnVVSIDldb70YJGgVo5KGWg0YB7ZUR3WOI4XcR
      ncMgRIsRYarC2U/v8PqBJJ8vAPUCRwYt7la7Cb0yY92SvNFNWJKoxhIjx96kK9GMAnvRiDDl
      eRT+4usg5YvlUWvQIWi/+QiACcJoHtx7NFdr/md9l0SEl3GHLcz+Izjv/DfNmxixJsLJXxBc
      +VswXTDM5rUzHbBjCDeFMB1ErAuR6EY4SYh1Iiy3+dxJIgyzWXF5JVQ9h67l0NWV5lHPo70y
      SB8d1FZr+9VWXJjN9BBoFYAMEZ1D2Ad+s8UWwOjgyGiSc+MF3jx9iupiyI2s5O3Xh8lM3WCq
      6HL6tV0Ucj7pjh4y5SrpRNdG6X1tCAFitdVo+btMtHkSf+48jnGb4OI3sE//62hQvAa0koST
      H4HTcf966Xtd0aCGruVodlNUc5ymVdMIodWDLqoVW33faxbwe11b49691aCa3VotQ7TvoT0f
      5QXN+k+aGLEQqzsFtRX883+2dWKC190CvAxkFcu+jD2Yxjr6u9gH/5PNzlHboypLeD/9I0Ss
      s+Xv0lqBDNFBA+030F6A8kJ0aKCliw4tNHEwOgEXzDgYbvNkWQO5jGktYKbNrWMGbSvMDkL/
      ECI/Dre+h9E5hLHraGQZegZy9hyqXiOcLzz0qmo+CPGg96mDZpdFCGC1bhY0X0OD1CjfQisX
      TQpED5hJEE6zK2uY4D7jPpgJMPci9TAyX44EsG6sXoJiGcPJ4l/497hf/p8QyV3PP28HomWI
      nDuHrEikPvOgNn7kQ194fu9/rbgvFABMsDegohEWWN3RTHBL2GP4yw66WiC48Odov7bZOWpL
      dGkWVVlBVpwnF/5nIYxmYb1/bGwrGwmgFYRAOyfwF0Jkfobgyl+jZbDZuWortNbI+UuoUhZt
      jmx2dh4jEkCrCANlniRYKCLnLhJO/HSzc9ReqAC5eBlZ0WD1bHZuHiMSwEZgOEh5nGAlT3jr
      +8j5C2ySca3t0KUFZG4KJfeszre0F+2Xo62KlSas7kUWiviXvokuzW12jtoCOX8BVfPQ5sBm
      Z+WJRALYSOzd+IVeVLWEf+7/bc5I7mC0CpHzF5A1G4yOzc7OE4kEsJEIAfZ+/EUTVcrgn//z
      HT0o1oUZZGER5Xev2vHbj0gAG40w0NYx/LkiKnOL8MZ3dux4QM6dR5XrYA9tdlaeSiSAl4Fh
      o8zT+PMrBOM/Rc59ttk5euXooIFcuoasxcFq333hIgG8LIwYMjyOLFYJrvwtMju+2Tl6pajy
      PHJlEsXgZmflmUQCeJmY3QSlIVQxT3Dh66hqdrNz9MqQc+eRxQpY/ZudlWcSCeBlIgQ4I/iZ
      BLK4THDhL9Dh9t8YUKsQOXMO6fesuqK3Ly0LIAx8PM9DKo0MQzw/aE5/hwF+EKDRKKXQWiGV
      ev4XbkO0fYhgUSGzdwlvfX/bD4pV5iYyO4sWgxvuu7PRtOwN+vHPfoCV7OfQiRNMXPiIiic5
      fPp9Zq+eox5Kjp15k9xcnbRTQKbHGOtv3R98yyEslHmCYP4cwvgxRtcI5tAbm52rl4LWutn9
      qRpgt+fk18O0KICAarVBT1+ShBOQ6DvAO0cSfPzRND1jh3ij1+HuYoa58TuURw/yzsFOpJRo
      rV88JjgIUEqtRvxsRWyUPIrIXEVf+iZWagTc9rWOrJugSjD/OaHXiXbFqjtz+9KaAJTg1377
      9/CWb3N9uojw6/hlhZ2M4zU8/EaAabns3neERi2LFypi1mo4nNZY1tqT10phGEYzJnSrYncT
      1sYwisuoi3+O+/4fNONjtxEyO41auouw32377g+0vCyKZOLqBfJ1zWunD5G7u8xHl0u8895b
      zF6/wKVbcOadE+QWG/SOpljK5Bkb6r0fE/wiEVRaCFQYglIYZnvOKq4Je5ggk8WI3SGc+CnW
      4f9020SSaa2Rs+eQdQfszi3xu7ZMTLAfhnzwwU9xJqdJFwp0KE3CMHBiMQzTRBhbyKClQ0z9
      CfZQGve9P8DsP7bZOdoQdFCn9u1/g7fQBc6B7dICSGZnFigt3sUYPM7Rkd6Xn6snIaAyOIAa
      6GdFa4x6AzubJb6yQmexTKrRoEOD6ziYjoNo51ZCWEh5HCN3A//SX+J++X/GSLSfr/yLolZu
      I3N5sI5uicIPaxJAjp9+/0OUW8SZVhwd+erLz9XzEAKViOMlhvFGhikohfB87HKJWC5Px0qW
      dC5HEojFYljx+OppzZvyrEZPSQlKoaREK4mSCqU1UmtMIYinUhvT2ljdBOVBjNw8waVv4Lzz
      3yHM9raZPwutNeHURyg/CXZ7en4+iTUIoI+BVJX46Osot01n9QwDHY/hx2P4/f2UgAWtMUsl
      YkvLJLI5UpUqHVqjlSI0DJQQhIZBaBhIwyB0bELTRMZdpOMg4zGUbSNtG+3YKMfBLlc48PkV
      +pMbJAJ3H/5yAWFfI5z4Cfbh32n9OzcLv0I4fR6ld2+Z2h/WJIAKU3PLDPXso768CKcPvPxc
      bQRCINNpquk0VSAThhieDwK0aTZFs/q4VrxUituOA5+eoz/VuSEi0PZxguVziNs/wug9iNm7
      Ra7vF5Ar48hcDuxTm52VF2INd9AhlXK4fPYTnL4t3E+1LFRHApVIoF0XbdsvVPjvEfT1cvvd
      t1iqlJvdpVYxXKQ8Sriy0nSVaBRb/85XjNYKOf0JMuh98VUfNpk1lACTd772T3jv9FHGhvpe
      fo62AEFPD+NvnSZTrWzMvITdQ1AaRK7M4F/6q6031+FXCafOo432W/XheaxBAAU+/PEnTBey
      XD9/7eXnaIsQ9PVy+50zZMqljSmwzl78rIucv4Sc/PmW8heSmVuEuRKY3ZudlRdmDWOAXt44
      NUx81zCBkXz5OdpCBD093Hr7DOqz8wy0OjAWBto8RrD4KcL5DqJzGLPv4MZl9iUS3v0FKuiB
      +NZbKXsNd8zn5tUL/Me//TYTC/mXn6OnoLWm7BUpNqpordumhrw3JliuVVtvCQwXqU8QriwT
      fP7NLRFUrxslwqmLaHPPZmdlXaxBAFXqMsnw6G6qmdzLz9FTkfjeNXKVS9xcvshMYYZCvUQg
      w00XQ9jdzc333mHRa7QuArOLoLQbmZkiuPTN5hLibYxcvkaY98DepAnSFnlmF0iHHpmi4Hf/
      2X/G1LXzsHtzTXSG0KRdhdZVpK5Sqs2SqyawzG46nDSpWBLH3Jz1fmVnivG33kR8ep6BWHz9
      3SEhwNmHv5xHOOcweg9i7fu1jc3sBqGVJJz4+artv41n3p/BM+9Sbu4mV8aX6d01wOl3XuPO
      zTuvKl/PRAiwDEg6irRTIWHOUPeuMZW9xMTKOJlKFi8MUK+4ZQjTaW6/c4bFRr3pur1ehIG2
      TxFkqgRX/w6Vu7txmdxAdC1LMHUZ7OHNzsq6eWZ1mezuZ/pH3+FnjWWK87foPtJ+G0EI0Vw+
      PmErEnYdpes0/EVm6zFMs5O43UNnLEXMcl6Jd2LY2cn4W6fhs/MMttISGA4yOEKYvYG4+A3c
      r/wbhJPY2My2iFy4jCxrWGO+tFJI30cYBmLVgXGzPUaf4w2qqVeKLGVyOIk0A7t6MI2NyfCL
      eoN6YYOvf/anSL32ySelIVSChnSwzQQdThIwURqkFigt0BiAQGBgCBPTsDANA1MYmIaJZZgY
      q7tGCiFWnz8fq1Rmz83bDFeq2M46xac1yDns5Azusa9gn/qXCLc9LHFahdT/4X+lcVeAO/b8
      z2tNtlJmengPhgwxNZhaYxkGhtm8xpYG0/cxPA+r3sD0fUwlMRH3PyeEaBpBVlvYewaRe1sK
      qIf/X90jTAvQwkADhlI4WmFbNqZtP88MKognHVYuZegZTfAkpaiwwa9+dY6Tp99leeISU7mA
      d999i7mbF1koa956+wT55TrpuE9RdrBn16sLiTQEOKbGMT3AQ8kHVixz9VD6wRFq8DSoVXEo
      jObOlBgIYWKIOD0dw6RjyecW6LAzxdSZNyhfucbRTBZ31SHvhRACrGGCkkaM/xINOGf+a4Sx
      +f1tlZ8kmLoDztqcI2XgMzPYT/HEGl2/tYYwxGh4iDDEbDQwGw0MKVGWhTaM5mGazcfV4Kqm
      e4tAG+YDtxcE2mpeM8P3EY0GdrmCUyytZR7AZWCgg+9/60/Q+7/Gf/v7X37k3aXJcWqhouHV
      yPsu7x/v5Mq1aSy3i1MHBTNzS4QVWJ7PcvTN02v78a8QQzSPR7lfnzzyqtI1CrUy9WAfg6m+
      59fqhkHu5HFufX6FI9k8znpEAGDvIVhZwXDPEfbsxT7wm+v7ng1ETp1FyV1gr02MpUqF0ttn
      1p6AEGDbqNVewkbtDKcsCxIJZE8PDdboDPfNf/fvOfSP/gnvvXHikXdkbYUb81U6REC5WsF1
      OnDTcfwrGVJ7u3DjDrKYY2Z8nNTIQVzTWPc+wX7YjAmWanM3yesw63jBTSZzRQZTI2uyOi2f
      PI68ep0jyys4sdi60hXmcbyFT9HWf0C6PRj96990vGWCOt7NnyONQ+g1+ENpGbLY2UkQc9tj
      k8OHWIMAEnztd77G2Qs/4yeByX/xO2/ff0cJl+HBLmbuZgikQzV7nV/8XDF68m3mb15k+a5k
      /+uvM3IoSVesyN2FHPuHejBN84XHANpoxgSbbWBuS5gQqEXmSzX6UwdIuc/3f8+/doI7n13g
      aK2O6axnxtREh68hV65gXPkm1q//LxiJzbG9y/w4KlvFsNNrcn0uVyrkT7+O2YZBSmsIifSZ
      uDFJeqCfjkQHcffxQivDEGGaqMDHk5pEzCUMPAIpiMdtZKgxDQgVWJaJ4NUMgl82WkPJd+iI
      7aOvo++5A2SjVufIBx8y0Jle/6A4WMBJT2ONHcd9/39A2OtrUdaL1hr/0z+l+sl1cA4+VwBa
      Ke4EPtO//mVoQwGswUYX8NN/+CYf/epTvvPDJy/yalpWcxTvuHTEYwghsJ0YibiLwGgWesPE
      Xi382wUhIO36BMEtZgqT+PLZs7YqEWfmwH68en39CTpD+IUe5NJtguv/Af2qu4QyIJj4DKyh
      NdX+XqPByvCetiz8sCYBCExTcPVXv0LF2ssO3S7ELU3cmGM2f52KV3+ma0Z13xgLWrXmvuEc
      xF8yCCc+eOUrT6vcBOFKFYznlwWtNfnApz7Wvm7SzxRAtTDLX3/97zDTg9iujWO1hwNaO2IZ
      kHaKZMqXyVRXnjoLrW2b+ddfo1JsIfBFGGj7NfzFOv6Fv0TlJ9f/XS9IOP5zFMNrqv1Dr8Hi
      8B70usY8r4ZnCiCeGuC3/vFvM9rfTbqnn30j7b3U9WYjBHQ6Pr4/zmxhivAp3RN/Vx8zXZ3I
      oIXdY4SF4gThchb//F+g6i/fU1cHdYI7n4O9tnJQ8jzKo+1b+8PzWoDcXf6PP/pj7pQsjh8/
      TMzaTj34l4MQkLAlMWOWqdx1Kl7t8e6OEKy8dpJstdJaV8hMEfrHCGZvEZz/c/RzxiCtoJVC
      zl8kLIo1hT3KMGSpqwvZ2d7LPz7TDOom+/n9f/Wfc++y2lZ7DmTakWaXqECmfJV67AB9Hd2P
      WH5kKsnM2CjdSxnsdc4NAGD2EpSHEZPnMbr/AevY7yE2eDtSHXoE17+Dd/7bKI6s6ZxatUr+
      9KlHukplr0a+lsWxYsTtOI5p41rOmt1LXgbPFIAT7+LU6fabvd0qGAI6HY+af4PpYIg96RGs
      h9wYSkcOsTA7x4jjtOY+bY8RZCsYN3+ASA9jDr25IU5mWmt0NUNw/ut4N88R+ofAen5cuFaK
      jOvg9z6Yp9Bak6nMkbSWUFJQCgShspDaQYgYtpkgZidwrRhx28UU5gv5Xq2XzXGe30EIAR22
      IpCzTOUajHYfxL43e2xZzJ04Rs+V6yQ7W/CREgbaPYa/cB4ufINY525EandL+dZKImc/xf/0
      L/AXKijzbbDXZgX0azWWD+6DhxY/rvh1hF6huTayxjE14K8eFZSGIICiZ7CiTDQxTCOGZcZx
      zARxO4Zt2pjGA1P6Pae3F8UQDxwbIwG8ImwT4jrLSrWbwVT//Rq6sXs3c3cmORiGmC+wWvZj
      CAslThAuXMI//xe4X/ofEfb6fI906BFc+iv8az8kKPai7XdBrC1vWmtyvk/9ocGv1ppsdYkO
      ++lzFoYA1wIXRdMHK0DrMlKDkoKibxBoC3hIAKt/hHiaDB5/XSNoDn0NlI4E8EpxTU3Bm8WL
      dxGzVweSpsHS66/R99FZetNdrSVgdhD6RxETlxCJb+Cc/tcvtNyi1hpdmMb71f9NMDVBGBxt
      bnLxAt2Q0PNY3Dv6yMRXLWigVAbrBVd+FAKadheNY0o2ziXuAVtoSeWtjxCQtOssV5ceeV2m
      O5nZPUjQaLSeiN1DUBsjuPUh4Z0P1nyaVpJw/MfUf/LHeOOzhPKtprnzRZaw15qS71EeeTBP
      oLUmX1uhw2rPvdEiAbxibBNkuEDVf9QdonD8KEuBv0ELbY0R5DrxL/wVcunqcz+ualn8s/8X
      jY/+FG/eRFlvg/nigTdaSpZSyUdMn74MaARLq33/9qNNs7W9STkBy+U51EPbB2nHYe7wIer1
      DVgKRQi0c5xgGfzP/gxVXnzix7RWyOXrNH7yR3iXf0FQPgjuyTX3979IrVYld+TQI61Gppoh
      ZTfadr3cSACbQHMYlqFQLz8yEVYbHWbONDdmzVFhoKzX8Kfn8c/92WNOczpoEF7/Dt6H/xZ/
      Mkuo3gF7aN3JaaVYcl2Ch0yfvgxp+EtrjZnZFCIBbAJN06gkV51+1GfINFl883XKpdLGJGTE
      kPp1/PHLBFf+Br3qhKeKc3gf/Vsan34Lb85G2e+C2dHSsuaNWo2VfWOP9P2z1SwJq70X92rR
      CiS59fkFsr7L6TdOUF68w8RKyNuvH2Fl5hbTBYPTp8Yo5HxScU3RE/R1tUdQ92ZjCIiZJbK1
      PP3JB7Vm2JVmemAXx8pVLHcDVlq20oTeYfxLf4/ROQSGQ3D5WwRz84T+YXAHocWZY601eTT1
      3Q98hEIlqXrLdLf5YtEtb5LXP3aM9PI443PLVBaLHBow+fzWHH4tZLQrZHx2maAomfczjBzd
      nnvjrpe4pcnXp0nHOnHv2QiFIHfiGJmf/5LB9a4m8UWsAYJiEfHxn4DpECwrlPkWOBtTGYW+
      z+Ke3Y94fRYbRWJmqW37/vdoTQDCoZEb5/JUnlNv7YZaHz1jCW5+sEDv/h66emPk55eZuTVO
      auwoJ+PWlo8J3mgSZoXl8hJDnQ9mbqXjMDM6Qtf0LE5ig2IwzP3oFQ9wkNZ+wNyw+NxCrUZp
      5A3kQxasXHWebidstxDgx2hNAF6VMN7HyTGfuUyAX5hn6ppB5+gY+aUFzEqI0z3MyOE3sGSG
      pUKd/q74lo8J3kgMA4reAp7sI+E8cIqrHjnE4uwce2GDNvwzwXit+WwDq2UZBCx3d6E7U9zL
      ZbZaIGGV2zIG+Iu01vmzHYLSClmZ4sS+3Rw7OErN3c2xfQMcHu0ljO1m3+4+RkZ2cejocWzR
      5tXBJiAEJB2PpfLco67RhsH8qZOUq5WNTWyD+yS1SoX8kUP3/1dKUagvEre2xiYfrbUAhs2+
      ww+W53B37SG9q/m8e2CUe9sldHY2a/qe9g0M2lQso2kWLXkDpGMP+uV+/y5murs4WvfWuZLE
      y0VJyXJHgqArDdxbwr6KJfJt3/e/R2QGbRM67JBsZfaRfnQzcOYE2cY6g+hfMl69zsro8H2/
      Hw1ka4skrK3T0kcCaBMMAbaRI1cvPPK6SiSYGRnGr7WfPT2nJPXhBxtj1IMGqCzmFipVWyir
      25+EpSjUpgm+YDopHTnEArqtNs8LG48GvGutWa4s0um294YeXyQSQBshBKTsCsuVzKNvWBbz
      Rw9TqWzggLhFitUqlX0PVoWuBR6olSess9reRAJoM2wDGv4c9cB75PXGniFmutKocPNrWBn4
      LO3qQ63OUWitydYyJGzvOWe2H5EA2gwhIOXUWa4sPmoWFYLMqZMsbMRmfC2gtaZaq5M7uP++
      SdWTAUGwhL0FS9MWzPL2xzJAyUVqwaMBMioeY+qNUxQr5daWU2kFrcm49iOmz2w1S8LegGCe
      TSASQJuScgIWil/wFhUCb3CA2/vGaNSqm5KvRq1KZv/++wHvoZLU/UXc9p/0fSKRANoUQ4Br
      5sjXH19CsXLoIJOJOOEL+FJtBFpr8mFIfeSB6TNbzdHR5i7PzyISQBuTsCSF2uzjSywaBktv
      n2FOy40JnlkjoeexNPJg4iuQIVV/aXWJk61JJIA2RgiIGUWy1cc3KNeOw8yp18hvpK/QM5BB
      wKzQlA492Cu6UC/iGuUt4/bwJCIBtDkxS1NqzOCFjy+kG/T2MHH4ELXyyx0UyyBgSkmm33kb
      tbqMo9KaQn1hyzi9PY1IAG1Oc8XpGkvlxScW8uq+MSZ6uwm9l2ODD4OAKQEz776N6ngQm1Co
      l4mZxS1d+0MkgC2BJSAMFx+bHANACLKvnWBGhhs+PxD6PpOmwcw7b6ESD1aZU1qRry0S3wb7
      RbQsgFopz8JShlBp6pUCi5k8Wmtq5TxLKwU0kkYjQIU+da+F9fB3MM3JMY/F8swTWwHtusy8
      /y6ZSovLrd/7Pq3xPY+JmMPM+++gYo8G9pYbVSyR3XJuD0+ixaD4BpN3Z9FhmYJvUJy6gmso
      KsEpMpM3cYwQj6OUlzwSIos7eOiJm+xFPB/TAEdkWKn2sCv5+O6QqiPBnRNHiV+9QTKVaimW
      OPQ8JuIuS6fffGxvL601udoSyS3k8vwsWhSAy+GjB7h9a5zeTonqGeP40QRnP5ynd98ooz0u
      dxcyzNwaJ733KO91d0QxwS3gGpJy7TamMEnHHt94ojq0m9u5PCcy2XWvKBE0Gkx0xFk88yba
      NB6LG64FDZTMgCnbPt53LbQogJDbN8cZPnychOUzVVugulzD6UlRKVWpWhUMp4ORQ6fw60tU
      vJBUzIpiglsgHQsp1O/gWEdJuo8HzBdPHmf6l2fZrxTmC1xfaO7oOJFOsXzmTYwnxPNqrclU
      l+l0JaaxPe5Da2OAsEF2Jcu5s79gNheyu8vg4pTPa8dG6LUb3Jr32Ts8QN+uLk4cO0yxWF7X
      eu4RD7hnFVouj+M/wTSKabLw5uss12trHhRrrfHqdW71dLH81uknbmmqtW4OwvXKlgp4eR5r
      2Cj75bAdNsreTEIF5aCPsZ5Dj+w6cw93YZHjn1+hK/X8jTfq9To3+/vInzz+1KD5RuizVLpD
      3Fxp24Vu18M2+ik7C8uADmuFueLsEy0/3u5BJob34FWf7TTXqFS40d9L/sSxZ/QnLu4AABKt
      SURBVBb+2cItEtus8EMkgC2NY4LNLAtPmSQrHTvCnY4nO81pralWKlzf3U/h5InmAkVPoBY0
      mC/coMspbKuuzz224U/aWbimJgymyNUKj79pGCy/+ToLYfDYeKBWq3FzzyCFE0/v9pQaVRaL
      1+l0StvC5v8kIgFscZorTYcUa7cpe493d1Q8zuTpNyjkmxOUWmsq1So39o1SPHb0iTW/1ppi
      o0ymfIO0U922hR8iAWwLhIC067Ncvk3NfzwyK+zuYuLoIerVKuVajWuH9lM6sP+phb/QKFGo
      3iTt1re8r8/ziDbJ2yYIAZ12hcXyHUa6Dj/YinX1zfKB/dyq1vB6uqk9tIfXw2itWanmqHkT
      JG1/2xd+iFqAbYVpQIeVY6Zw59EV5gAMg/wbp6iNjjy18GeqK9S82zum8EMkgG2HbUDczDBX
      nHs0nvgZKK1ZqiwRBOOknHDHFH6IukDbEsfQyHCGTMWlP7nrmY5xSivmirMINdv2wS1KSZQK
      0EIgaO72LjDgof9flEgA2xAhIGEryv5d8nWXnkT6iZ8LlWSpNI+hZ4jb7eukopSk4WXpNysM
      uiaB1vgKfKUIFEgEgYJQC0IgUAKpQWIgDAtDWCBMwLi/HVRTLNFO8duapB1QqI3jmMcec5wL
      lWSuOIkrFrHbMKi9abJV1L0cu4wiv7Grm92JYcwvWK601mia3bjmc43SDw5PSXwZ4ktJqAOk
      brZ6avW8SADPQWmFlAFKBUjlIwwb07CxTQfR4uZyL5um41ydxdJtRrqP4VrNhWwDGTJbuEvC
      bM8tTKUK8bwcPaLMV3pT7O3c+9TPNrtBYDyl+/O8XdB2tAAedR/QhNLHC2po5SFUA1cEdNkG
      Pa5N0jRIOy7VsEHW8ygHikKgqEoDw0ygDRfHiuFYD0IHN2SDuxYxBKTdMnPFSUa7DiC1Yr44
      QYfVXn49zXuhqdRX6BElvtKbZiQ5/ERHv41kxwhAa41UIUqFKOWjVANTe9iEJAxJ2hKkHZve
      zhhdToKk3YO9hj2uQqWoBh5Fv85KfYWc71EMoKENPBwkNoYZv99yWOarj4gzBSTMZWaLBqGs
      k3aKbeXX06zx83RS5Hf6OhlNjT21Rt9oWhZAJbdIIYgxPJAmvzjNVC7k1LH95OfvMlcWnDw6
      TLno0+FCyRf0dG7QrofP4F5hD8IGYVjBVHUSpmS3a9HpGHS7Mbocl5iVIG46ayroT8MyDNJu
      nLQbZ/ShIK1QSephQD0MKfkNCn6JjBcw04iTSAxgvOLuk2OCIRYRJm1T+JVW1BpZuijxfk+K
      sdQI9isOtGk5IiybLVBULkO9cW5NLjHaY3BlYoF6sczulGRizsUvBBhBhoFDpzYm16torVFa
      olRIKBsgq5jaI2mE9LsW/Z1xdsU7SNk9mEJgiPWZytaDZZikHJOUA/2J5P38zlZL/Hz5Dr49
      hG3FX2k3qV26PEpJGn6BDpXjqz0p9ncOv/KCf48WBWAxNjbC1akMStdJpgfYfSjB5AcL9O7v
      pb83xt3VfYI7x45yrMNpKSY4lAF1v4KUdUxdJ26E9NkG3bZBb0eMLjdB0urGeVKNvmoV2GyG
      4kn+6XCMj5cXmai6xOODzz9pm6C1ouGX6NA53k3HOZwexjIM0CA3KcC4RQFoPM8j8H2UcqgU
      l1gcN+kYHiSfyRL3QqzEICOHX8cIMqyUPXpT7rpigk1TcSJRRbhlehyX7tguHMPENsy2GGy+
      CAnT5Gt7RjhYKfLz5UmUuwfLdLfc73gS9wazWitC6ROGNbSs4uDR4xgc6OrgQHoE12yP4WeL
      ufC5fXOCRihZKPRzaKyf6bzi1LEhcvMeC2WDE3t2UerwSSV2kat4wPpWKzCAN7qToOPP/exW
      wBCCsVQX/zzewSfLC0w0OnDdXowtFGx+rwsaSh8p62hZJyYC4oaiy9LsirvsisXpju0iZtpt
      KfAtExOsZYPazJ/ANowJVlozUynywXIR5Q49YkptJ5SS1P0yUtZANug0Q3pdmz7XoteNkXZc
      4paNa1ptWdifRHu0QzscQwhGk2n+VSLJLxfnmWykcNzeV24pehpaaxp+gW69wtvpJH2xBGm3
      D3O1kG+Vwv4kIgG0CUIIXNPia0Mj3C3l+Tg7ReDsxrZim5ovKQOCxjxn0hYne0Zf+sTUqyYS
      QJshhGB/uofdHSnOLi8yUU8Qi/W98tZAa43nF+ljha/s6afbfbUm21dFJIA2JW7ZfHX3HvaV
      C/w8cxcVG8Yy12dAeFGk9FHeAmc6TV7rHW2brtjLIBJAG2MIwd7ObnpjCT7JzDNZTxKP9cI6
      fd+fh9Yaz8vTb+T50tCubVvrP0wkgC1AynH5zaFhZitFLubukJMuyurEsZIbZjb1wwaGv8SX
      uh0OpUceczverkQC2CIYQjCa6mIkmaYSeMxVK9wqrbAYWFhOLzHneY6/T6dazzBil3l/zy7S
      bnuaYF8W0TzAFkZrTdGvM1HMc6tcp0IS2+nBsmLP7bdrrQlkA+Et8Gt9SfZ2dr8yD8x2IhLA
      NkFpzUq9wmSlzGRNUlAxHKcb5wlmVK01tfoye50q7/UPkHJezeC6HYm6QNsEQwj6Eyn6EylO
      K0nR97hZWOJONaAuUsRivRjCJJQewpvja30p9neObJla/56P0UYTtQAPp6E1oGA1vrT5XDWf
      a829KyWMZkD1/ZBIw0AgQBhtFybpy5DleoVr+TxLvmAoZvB+/yAJ29nsrN1Ha4XWEpRCK4lS
      Ei0VSkpkqFGhgVw9lLJAgHhMDKv3C1bvwReELTQC0Fqs3luB1i8pKF4rnwtnPyZblbz1lbfI
      ztXojlcpm73sHexa33dqgV/zkN7jm0avHYFWGqUUWhooBUpZaGWgpIlSJlpbzde0jdYWWjVf
      R5soLAQaIQKEIRFCIkSAYUiECDGMoPmaIZuvGQrD0M3XDY0wTAxDYFgGhgnCsBCGCYaFECbC
      ePrtWK850jEthpNd7OlI4yuJbZivpNZ/pF7VEiV9VOgjgxAVKmSokKGJDB1k6CJlDCVdpHRR
      KobWLkrH0doCLDSrqzrwNKvXi7YQzYrqpQjAK5WJDe7ly302U3OLFBeK5OIuZ84ceP7JT0Ep
      k5nx99Cytf1wNQZg8+rXBFOsLuABeAhChPAwDL/5KDwMo4FhSgwzxDTl6nONYYFhakxTY5gC
      w7IwTKvZEgkTYZjPbXnuuVpsNFo3a22tJToMkWGI9BWBLwh9k8B3CP0EUu5CyiSKBJo4sNEt
      kOCxWn8NvMQxQHOxItBIGaKk1XIPTmtz9eJtRQzAQGMDiea10I/tQfcFmqKBEIECQgzRFIxp
      ljFMD8uqY5o+pu1j2T6mJTFtC9MyMCy72cqscQWLZldPrT5XzQyuPt57TymJ9ANkoAg8m9B3
      CIIEMkwhZQdSdqK0s3qfLNp98cGXIgA3laR29TK/uCM5/aW3sHQnfckGd2dXODjStw6d7lSM
      1cO+X3nI1ZY+VEAAD5r+e4fEEDUEDQyjjmlWMM0aplXDsn2EECjV7P+iTbQCjYmSNP/HQGsT
      tIHSzQLcrHgs0AKl4iidROl7BVyw3tq3Hdgyg+DQD7n63c/QavPDGiO2D6/cDPpwTHAQrH3n
      eK0U6eFeQn/1nOZA/sV4+Jz1nP+071pv+rziPHzx86/6GnzxN7eSfqvXf/X/TWsBwjDEstav
      v/Wc/3CrI6XEMIx1W1eklAghMF7AZ+bh9NXq8uUvcv7DKNU0z5ovsKRLGIaYZjOGWuumNexF
      zn/S973IPbgX+H4vzVbKwHqu35Ou/6ZNhLVS+Dfi/FZu/Eacv96Cv1HnCyFa/g2beQ836vpt
      WguwGWitN9W9tx3Sh80LYWyH9L+Y9o4SQETEF2lvI+068Mo5Pr9xB4DM9HUm5ovP/HxYy3Pu
      8q0NS1/6DT7//DKh1pRXprl6e/4Zn9bM37nGhx+fpx5snIvHlXOfUVeasL7CZ5duPyN5xdTN
      z/nF2XOUG2HL6crSAhduzqKB+fFrTK+UnvpZFXqMX79EphSgwgbnz/6CG5OLtFIdL929xvRK
      DbTk8tlPedYW4V61wKXL17afAPyKx8zcHXwdMjczwXK2QmZ+ihu371Kv16l5Pr5XpeFJ0JLx
      8Uly+ZUNS1+FiuXFKQoVj4XJcRYLFYor81y7cZtaw6NcqaFlnXI1AD/LnYzm/bdP4W7guoWl
      whzzi2UWJyZYKJWpl7Jcu36TYq1BqVQG5VOqNCAoMlu0ODnaw8xi69dA17JMzWaoS8X4xATl
      UpmV+UlujE/SqJaoeIpGpYyvNKHvk+gwKVdCVsavkz78JpXMDOEX9zZ7ARp+lck70wTlDHcm
      ZqnKgKmJm9ydXaZaKREqTbVcRmoIfIkQCvMP//AP/7DlX95G+JUKjlNnKQeWLZGiEz97l8tX
      LmF17iaTyeEVlnC7Bwjyc+RkErwSQ3uGN8RHRgUBvlek4jv4XhnTSmI1Mly6eJ6qvYtadpGg
      nEN19pOszfOr28ssTU/g9uyhM74xNolCsUggFVXPJ26ZpEyPz86fJ9NwUaVllPaoqDjppEtm
      6jZ3F3LsHh0jnWjNLVpVM+RVB463TDlMEu9IUFma4OL5a7gDu8gs5Cjll+npH8BxXCxZoRKm
      8Mt5+sdG8PJZUr27sNe5em8xXyD0fHwCDB+6RvqZuPgZV6/eId2ToOwbLC3M09+/CzeeoFzI
      br8WACDWf4DMnfP09vZD0KAY2Jw8to+QOIkgy3Lg0OkaeEFIKTPNnbuT5CprX6f0edidAzRm
      zxHv24cAMoUar586ig5hV0pwIxMw0GFC1xAjXQmG+1JUG2ufE3kehpPEqUwhk0MIYG4px2uv
      n8RGsXe4m/PXFhjoSaLqFepmB8MDXeQLlQ1Ju7evl88/n2L/3l7Ao1A1OXl4FGUkiTdmqZjd
      2IbAr5eZmZ1nYX6OVKfJ5xevslRs4LS4dPXoniTXJsr0pGPUKgWc9BD7BlOkdu9l/vJHJPrG
      MASU88ssLCxuv0GwDAKkEHjVKolknIYPQTVPQxl0JmJcPvcJw2/+Bns6H9S21WqVjo6ODUlf
      K4UXBEivgZPswG+EEFQp1gNSyU6mrn2GM/wah4e6m2kXs+Rrit0DfZgbtCV7vV5HqBCcONL3
      sQjIFGqk0l3kpq5StAZ4/cgIAk05v0KhJhkc7F93zXsPHdTxRAyvWiaZiDX38SrnqIUm6S6X
      Cx+d49BbX6K/0yWoV1hYzqKFxeDuAUori9ipPtLJ2LrnxrxGHdO2qVUbuKbAiLvkFhcxnA4s
      Uef85Wm++tX3sARUChmyxdr2E8Az0RqpFIZpbo7nyr30W5iAaxUlJWIT0r838WYY5qZsw6qV
      QsFjwf47SwAREV9gW44BIiLWSiSAiB1NJICILYXWijAMN2y3n203DxDx6vmHv/p/uHB1ApJ9
      9HetwZqmJRd+8UOmKhbDXZpv/eXfcPXWHTp6h+hK3puL0BTzOUwn8cimfrWpz/g/v/ET3LDI
      h5dnOXlwiA++/XUKsb0Mdj15JW2vuMh3v/s9rk/lGB2I8b3vfJe5oqTXbUQtQETrLJQVv/97
      v8GP/uN3KGWm+N4/fJe78yvcvDWB79e4MzUHWjNz6yI/+Nkn5BZu8Vff+SWmZYGsURJ9/O5X
      T/D97/2ExakbfPe7P2B2ZYE/+d//mL//4ALFpbt87/s/Jl9vuoucfOerdHhlrl2/Sq2S4e7k
      FHO5Mlc/+yU//NknZJenmVkuk5m7S6EWguHy5d/6x1RunePDsx/Rf/IrVMY/ZtFLROsCRWwM
      TqKHuK6TySywuDTJxb8rcbLHo5LfTd4+wthQgR99eJ3fejPND68ZHD50jGP7ByFcAiDRswvq
      FZbnZliYuMDdeox9hw/w1uvH+Os//d8I452s6B7+6dEHab4xGuOH5yYZHBpChgFz8zNcunQB
      K/lfMT15gx65wq//s71Yls3Zb/8NA+/+NrHsZbqSCepJB4WIWoCI1qnl5vjRd79NbPgY09ev
      kBrcR9yEX//SCb79o1u8c2oUIRxMWeTCrQX6+zqxbRvbbta/ublxvvv332XgyEluXbnK0NgI
      hjBJxgRXbozTt2uAPYdOc+bo0CPpDp58gxsf/ILBPf2EjTK3ppcZG9qF3bWXXfIOXtch0rbg
      7mc/5Py8JBaWGBwZ5uzPf8ydrMnip38XzQNEtE4xl8GTBt093RDUKVY9XNfh7vkfc8sf5Z//
      ozdBa+qrDnG93Wnq9QaJjgRCS3LZHFJY9HR3EdTL1LwQJ96BI0JKdUk6bpIvVUl2dqMXL/KD
      6QS/c2Yfpuvi16rEYzYBFkG1hMTA1AF/961v8Zv/5R8wkjLx6xXypSpCmHT3dlMt5DETKWzl
      RQKI2FqE1SwffnKRo29+id3drS+REwkgYkfz/wPYiN/tjg68pQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TreeMap - Test vs Death Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldMap - New Cases' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
